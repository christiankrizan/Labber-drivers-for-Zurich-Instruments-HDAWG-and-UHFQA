# Instrument driver configuration file.

[General settings]

# The name is shown in all the configuration windows
name: Zurich Instruments HDAWG

# The version string should be updated whenever changes are made to this config file
version: 0.835.1

# Name of folder containing the code defining a custom driver. Do not define this item
# or leave it blank for any standard driver based on the built-in VISA interface.
driver_path: Zurich Instruments HDAWG

interface: USB
address: Enter device serial or '<autodetect>'

# Define if the instrument can be hardware triggered
#support_arm: True
#support_hardware_loop: False

[Model and options]
# The option section allow instruments with different options to use the same driver

# Check instrument model id at startup (True or False). Default is False
check_model: False

# List of models supported by this driver
model_str_1: HDAWG

check_option: False
# Note from the author: the driver includes automatic fetching of the
# installed options - it kindly asks the instrument to report its capabilities.

# General VISA settings for the instrument.
[VISA settings]

# Enable or disable communication over the VISA protocol (True or False)
# If False, the driver will not perform any operations (unless there is a custom driver).
use_visa: False



#######################################################################
### Sequence ##########################################################
#######################################################################

[Run mode]
datatype: COMBO
combo_def_1: Internal trigger
combo_def_2: External trigger
combo_def_3: Play once, then external trigger
def_value: Internal trigger
tooltip: Internal trigger plays and repeats the AWG after a defined amount of time. External trigger halts the AWG, awaiting a trigger to continue. Play once plays the AWG, then await an external trigger to continue.
; TODO: This tooltip is too long.
; For external triggering, use Trigger 1 defined below to trigger the AWG
group: Sequencer
section: Setup
set_cmd: other /%s/run_mode
get_cmd: other /%s/run_mode

[Sequencer triggers]
datatype: COMBO
combo_def_1: Send at AWG program start
combo_def_2: Send at AWG program finish
combo_def_3: Hold high during playback
combo_def_4: Send at AWG program start + finish
combo_def_5: Do not send sequencer triggers
def_value: Send at AWG program finish
tooltip: Will send active-high digital trigger 1 at the specified occasion.
group: Sequencer
section: Setup
set_cmd: other /%s/sequencer_triggers
get_cmd: other /%s/sequencer_triggers

[Run]
datatype: BOOLEAN
def_value: False
tooltip: Starts the AWG sequencer.
group: Sequencer
section: Setup
set_cmd: awgModule/awg/enable
get_cmd: awgModule/awg/enable

[Suppress forced sequencer repetition]
datatype: BOOLEAN
def_value: True
tooltip: Suppresses the sequencer program repeat function. Sequencer repetition may cause jitter if left on, suppress it unless you really know what you're doing.
group: Sequencer
section: Setup
set_cmd: boolean /%s/awgs/0/single
get_cmd: boolean /%s/awgs/0/single

[Minimise inter-device asynchronous jitter]
datatype: BOOLEAN
def_value: False
tooltip: Synchronises the device to the beat frequency of the sequencers (75 MHz). Disables oscillator 1.
group: Sequencer
section: Setup
set_cmd: other /%s/minimise_jitter
get_cmd: other /%s/minimise_jitter

[Halt on cache overflow]
datatype: BOOLEAN
def_value: True
tooltip: Halt the device if the waveform cache memory runs out of space.
group: Sequencer
section: Setup

[Use oscillator-based repetition delay]
datatype: BOOLEAN
def_value: False
tooltip: Base the internal repetition delay on oscillator 2. This generates much more accurate internal triggers but limits the delay amount to a pre-calculated set of options
group: Sequencer: internal trigger settings
section: Triggers
state_quant: Run mode
state_value_1: Internal trigger
set_cmd: other /%s/oscillator_based_delay
get_cmd: other /%s/oscillator_based_delay

#[Sample clock]
[Output sample rate]
datatype: DOUBLE
def_value: 2.4e9
high_lim: 2.4e9
low_lim: 100e6
unit: Sa/s
group: Clock
section: Setup
tooltip: Set the device 'Sample clock' (see ZI documentation).
set_cmd: other /%s/system/clocks/sampleclock/freq
get_cmd: other /%s/system/clocks/sampleclock/freq

[Attempt API reconnection when the HDAWG crashes]
datatype: BOOLEAN
def_value: True
group: Crash handling
section: Setup
tooltip: As of 2020, the ZI HDAWG encounters many errors, particularly after uploading waveform data. Setting this field to 'True' signals the driver to wait for a user-provided amount of time and then try to re-instantiate the ZI API connection.

[Time to wait]
datatype: DOUBLE
def_value: 600
low_lim: 0.1
unit: s
group: Crash handling
section: Setup
tooltip: Amount of time to wait for before attempting to restore the ZI API after a crash.


#[Sampling rate]
[Output sample rate divisor]
datatype: COMBO
combo_def_1: Sample rate / 1
combo_def_2: Sample rate / 2
combo_def_3: Sample rate / 4
combo_def_4: Sample rate / 8
combo_def_5: Sample rate / 16
combo_def_6: Sample rate / 32
combo_def_7: Sample rate / 64
combo_def_8: Sample rate / 128
combo_def_9: Sample rate / 256
combo_def_10: Sample rate / 512
combo_def_11: Sample rate / 1024
combo_def_12: Sample rate / 2048
combo_def_13: Sample rate / 4096
combo_def_14: Sample rate / 8192
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
cmd_def_4: 3
cmd_def_5: 4
cmd_def_6: 5
cmd_def_7: 6
cmd_def_8: 7
cmd_def_9: 8
cmd_def_10: 9
cmd_def_11: 10
cmd_def_12: 11
cmd_def_13: 12
cmd_def_14: 13
def_value: Sample rate / 1
group: Clock
section: Setup
set_cmd: int /%s/awgs/0/time
get_cmd: int /%s/awgs/0/time
tooltip: Set the device 'Sampling rate.' The final sample rate is the 'Output sample rate' divided by this divisor.


[Reference clock]
datatype: COMBO
combo_def_1: Internal
combo_def_2: External
cmd_def_1: 0
cmd_def_2: 1
def_value: Internal
# The value was set to internal so that users are forced to switch the value,
# in which Labber will have to performSet this value.
group: Clock
section: Setup
set_cmd: other /%s/system/clocks/referenceclock/source
get_cmd: int /%s/system/clocks/referenceclock/source
tooltip: Set whether to synchronise the HDAWG with an external reference clock, or to run referred to its internal one.
# Changed from int to other to cover the more complex re-setting behaviour to internal should the external set fail.

[Beat frequency]
datatype: DOUBLE
unit: Sa/s
def_value: 600000000
low_lim: 0
group: Clock
section: Setup
state_quant: Minimise inter-device asynchronous jitter
state_value_1: True
tooltip: Insert here the beat frequency between the devices in question.
set_cmd: other /%s/beat_frequency
get_cmd: other /%s/beat_frequency

[Halt on external clock failure]
datatype: BOOLEAN
def_value: True
tooltip: Halt the device if failing to lock on to the external clock reference when requested to.
group: Clock
section: Setup


#######################################################################
### Triggers ##########################################################
#######################################################################


[Digital trigger 1]
label: Digital trigger 1
datatype: COMBO
combo_def_1: Trigger in 1
combo_def_2: Trigger in 2
combo_def_3: Trigger in 3
combo_def_4: Trigger in 4
combo_def_5: Trigger in 5
combo_def_6: Trigger in 6
combo_def_7: Trigger in 7
combo_def_8: Trigger in 8
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
cmd_def_4: 3
cmd_def_5: 4
cmd_def_6: 5
cmd_def_7: 6
cmd_def_8: 7
group: Triggers
tooltip: Trigger for the AWG when 'Run mode' is set to 'External trigger.'
section: Triggers
set_cmd: int /%s/awgs/0/auxtriggers/0/channel
get_cmd: int /%s/awgs/0/auxtriggers/0/channel

[Slope digital trigger 1]
label: Slope digital trigger 1
datatype: COMBO
combo_def_1: Rising edge
combo_def_2: Falling edge
combo_def_3: Both
combo_def_4: Level
cmd_def_1: 1
cmd_def_2: 2
cmd_def_3: 3
cmd_def_4: 0
def_value: Rising edge
group: Triggers
tooltip: Signal edge for activating the trigger.
section: Triggers
set_cmd: int /%s/awgs/0/auxtriggers/0/slope
get_cmd: int /%s/awgs/0/auxtriggers/0/slope

[Digital trigger 2]
label: Digital trigger 2
datatype: COMBO
combo_def_1: Trigger in 1
combo_def_2: Trigger in 2
combo_def_3: Trigger in 3
combo_def_4: Trigger in 4
combo_def_5: Trigger in 5
combo_def_6: Trigger in 6
combo_def_7: Trigger in 7
combo_def_8: Trigger in 8
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
cmd_def_4: 3
cmd_def_5: 4
cmd_def_6: 5
cmd_def_7: 6
cmd_def_8: 7
group: Triggers
tooltip: Trigger for the AWG when 'Run mode' is set to 'External trigger.'
section: Triggers
set_cmd: int /%s/awgs/0/auxtriggers/1/channel
get_cmd: int /%s/awgs/0/auxtriggers/1/channel

[Slope digital trigger 2]
label: Slope digital trigger 2
datatype: COMBO
combo_def_1: Rising edge
combo_def_2: Falling edge
combo_def_3: Both
combo_def_4: Level
cmd_def_1: 1
cmd_def_2: 2
cmd_def_3: 3
cmd_def_4: 0
def_value: Rising edge
group: Triggers
tooltip: Signal edge for activating the trigger.
section: Triggers
set_cmd: int /%s/awgs/0/auxtriggers/1/slope
get_cmd: int /%s/awgs/0/auxtriggers/1/slope

[Trigger out delay]
datatype: DOUBLE
def_value: 0
low_lim: 0
unit: s
group: Trigger delay at playback finish
section: Triggers
state_quant: Sequencer triggers
state_value_1: Send at AWG program finish
state_value_2: Send at AWG program start + finish
set_cmd: other /%s/trigger_out_delay
get_cmd: other /%s/trigger_out_delay

[Calibrate trigger out delay]
datatype: DOUBLE
def_value: 0.0
unit: s
tooltip: Calibrates the trigger out delay, enter the how many [s] the Trigger out delay overshoots ('The delay is 500 ns too long').
group: Trigger delay at playback finish
section: Triggers
state_quant: Sequencer triggers
state_value_1: Send at AWG program finish
state_value_2: Send at AWG program start + finish
set_cmd: other /%s/calibrate_trigger_out_delay
get_cmd: other /%s/calibrate_trigger_out_delay

[Halt on illegal repetition rate]
label: Halt program if detecting an illegal repetition rate
datatype: BOOLEAN
def_value: True
tooltip: Halt the device if the sequencer program takes longer to execute than the internal repetition rate given by the user (calculated delay time < 0).
group: Sequencer: internal trigger settings
section: Triggers
state_quant: Run mode
state_value_1: Internal trigger
set_cmd: other /%s/halt_on_illegal_repetition_rate
get_cmd: other /%s/halt_on_illegal_repetition_rate

[Internal trigger period]
datatype: DOUBLE
def_value: 100E-6
;low_lim: 100E-9
; TODO: Why does the trigger period have a lowest limit?
unit: s
state_quant: Run mode
state_value_1: Internal trigger
group: Sequencer: internal trigger settings
section: Triggers
set_cmd: other /%s/internal_trigger_period
get_cmd: other /%s/internal_trigger_period

[Calibrate internal trigger period]
datatype: DOUBLE
def_value: 0.0
unit: s
tooltip: Calibrates the internal trigger period, enter the how many [s] the Internal trigger period overshoots ('The period is 500 ns too long').
state_quant: Use oscillator-based repetition delay
state_value_1: False
group: Sequencer: internal trigger settings
section: Triggers
set_cmd: other /%s/calibrate_internal_trigger_period
get_cmd: other /%s/calibrate_internal_trigger_period

[Dynamic repetition rate]
label: Expand repetition rates dynamically
datatype: BOOLEAN
def_value: False
tooltip: If not halting on illegal repetition rates, expand the user-specified repetition rate to the minimum required value dynamically as the original requested value becomes illegal.
group: Sequencer: internal trigger settings
section: Triggers
state_quant: Halt on illegal repetition rate
state_value_1: False
set_cmd: other /%s/dynamic_repetition_rate
get_cmd: other /%s/dynamic_repetition_rate

[Trigger 1 - Input level]
label: Input level
datatype: DOUBLE
def_value: 1.0
high_lim: 10.0
low_lim: -10.0
unit: V
group: Trigger 1
section: Triggers
set_cmd: double /%s/triggers/in/0/level
get_cmd: double /%s/triggers/in/0/level

[Trigger 1 - Impedance]
label: Impedance
datatype: COMBO
combo_def_1: 1 kOhm
combo_def_2: 50 Ohm
cmd_def_1: 0
cmd_def_2: 1
def_value: 1 kOhm
group: Trigger 1
section: Triggers
set_cmd: int /%s/triggers/in/0/imp50
get_cmd: int /%s/triggers/in/0/imp50

[Trigger 2 - Input level]
label: Input level
datatype: DOUBLE
def_value: 1.0
high_lim: 10.0
low_lim: -10.0
unit: V
group: Trigger 2
section: Triggers
set_cmd: double /%s/triggers/in/1/level
get_cmd: double /%s/triggers/in/1/level

[Trigger 2 - Impedance]
label: Impedance
datatype: COMBO
combo_def_1: 1 kOhm
combo_def_2: 50 Ohm
cmd_def_1: 0
cmd_def_2: 1
def_value: 1 kOhm
group: Trigger 2
section: Triggers
set_cmd: int /%s/triggers/in/1/imp50
get_cmd: int /%s/triggers/in/1/imp50

[Trigger 3 - Input level]
label: Input level
datatype: DOUBLE
def_value: 1.0
high_lim: 10.0
low_lim: -10.0
unit: V
group: Trigger 3
section: Triggers
set_cmd: double /%s/triggers/in/2/level
get_cmd: double /%s/triggers/in/2/level

[Trigger 3 - Impedance]
label: Impedance
datatype: COMBO
combo_def_1: 1 kOhm
combo_def_2: 50 Ohm
cmd_def_1: 0
cmd_def_2: 1
def_value: 1 kOhm
group: Trigger 3
section: Triggers
set_cmd: int /%s/triggers/in/2/imp50
get_cmd: int /%s/triggers/in/2/imp50

[Trigger 4 - Input level]
label: Input level
datatype: DOUBLE
def_value: 1.0
high_lim: 10.0
low_lim: -10.0
unit: V
group: Trigger 4
section: Triggers
set_cmd: double /%s/triggers/in/3/level
get_cmd: double /%s/triggers/in/3/level

[Trigger 4 - Impedance]
label: Impedance
datatype: COMBO
combo_def_1: 1 kOhm
combo_def_2: 50 Ohm
cmd_def_1: 0
cmd_def_2: 1
def_value: 1 kOhm
group: Trigger 4
section: Triggers
set_cmd: int /%s/triggers/in/3/imp50
get_cmd: int /%s/triggers/in/3/imp50

[Trigger 5 - Input level]
label: Input level
datatype: DOUBLE
def_value: 1.0
high_lim: 10.0
low_lim: -10.0
unit: V
group: Trigger 5
section: Triggers
set_cmd: double /%s/triggers/in/4/level
get_cmd: double /%s/triggers/in/4/level

[Trigger 5 - Impedance]
label: Impedance
datatype: COMBO
combo_def_1: 1 kOhm
combo_def_2: 50 Ohm
cmd_def_1: 0
cmd_def_2: 1
def_value: 1 kOhm
group: Trigger 5
section: Triggers
set_cmd: int /%s/triggers/in/4/imp50
get_cmd: int /%s/triggers/in/4/imp50

[Trigger 6 - Input level]
label: Input level
datatype: DOUBLE
def_value: 1.0
high_lim: 10.0
low_lim: -10.0
unit: V
group: Trigger 6
section: Triggers
set_cmd: double /%s/triggers/in/5/level
get_cmd: double /%s/triggers/in/5/level

[Trigger 6 - Impedance]
label: Impedance
datatype: COMBO
combo_def_1: 1 kOhm
combo_def_2: 50 Ohm
cmd_def_1: 0
cmd_def_2: 1
def_value: 1 kOhm
group: Trigger 6
section: Triggers
set_cmd: int /%s/triggers/in/5/imp50
get_cmd: int /%s/triggers/in/5/imp50

[Trigger 7 - Input level]
label: Input level
datatype: DOUBLE
def_value: 1.0
high_lim: 10.0
low_lim: -10.0
unit: V
group: Trigger 7
section: Triggers
set_cmd: double /%s/triggers/in/6/level
get_cmd: double /%s/triggers/in/6/level

[Trigger 7 - Impedance]
label: Impedance
datatype: COMBO
combo_def_1: 1 kOhm
combo_def_2: 50 Ohm
cmd_def_1: 0
cmd_def_2: 1
def_value: 1 kOhm
group: Trigger 7
section: Triggers
set_cmd: int /%s/triggers/in/6/imp50
get_cmd: int /%s/triggers/in/6/imp50

[Trigger 8 - Input level]
label: Input level
datatype: DOUBLE
def_value: 1.0
high_lim: 10.0
low_lim: -10.0
unit: V
group: Trigger 8
section: Triggers
set_cmd: double /%s/triggers/in/7/level
get_cmd: double /%s/triggers/in/7/level

[Trigger 8 - Impedance]
label: Impedance
datatype: COMBO
combo_def_1: 1 kOhm
combo_def_2: 50 Ohm
cmd_def_1: 0
cmd_def_2: 1
def_value: 1 kOhm
group: Trigger 8
section: Triggers
set_cmd: int /%s/triggers/in/7/imp50
get_cmd: int /%s/triggers/in/7/imp50


#######################################################################
### Markers ###########################################################
#######################################################################


[Marker 1]
label: Assign signal to marker output 1
datatype: COMBO
combo_def_1: Output 1 Marker 1
combo_def_2: Output 1 Marker 2
combo_def_3: Output 2 Marker 1
combo_def_4: Output 2 Marker 2
combo_def_5: AWG Trigger 1
combo_def_6: AWG Trigger 2 (NOT RECOM.)
combo_def_7: AWG Trigger 3 (NOT RECOM.)
combo_def_8: AWG Trigger 4 (NOT RECOM.)
combo_def_9: High
combo_def_10: Low
combo_def_11: Trigger Input 1
combo_def_12: Trigger Input 2
combo_def_13: Trigger Input 3
combo_def_14: Trigger Input 4
combo_def_15: Trigger Input 5
combo_def_16: Trigger Input 6
combo_def_17: Trigger Input 7
combo_def_18: Trigger Input 8
cmd_def_1: 4
cmd_def_2: 5
cmd_def_3: 6
cmd_def_4: 7
cmd_def_5: 0
cmd_def_6: 1
cmd_def_7: 2
cmd_def_8: 3
cmd_def_9: 17
cmd_def_10: 18
cmd_def_11: 8
cmd_def_12: 9
cmd_def_13: 10
cmd_def_14: 11
cmd_def_15: 12
cmd_def_16: 13
cmd_def_17: 14
cmd_def_18: 15
def_value: AWG Trigger 1
group: Route marker outputs
section: Markers
set_cmd: int /%s/triggers/out/0/source
get_cmd: int /%s/triggers/out/0/source
tooltip: Select signal assigned to the corresponding marker output.

[Marker 2]
label: Assign signal to marker output 2
datatype: COMBO
combo_def_1: Output 1 Marker 1
combo_def_2: Output 1 Marker 2
combo_def_3: Output 2 Marker 1
combo_def_4: Output 2 Marker 2
combo_def_5: AWG Trigger 1
combo_def_6: AWG Trigger 2 (NOT RECOM.)
combo_def_7: AWG Trigger 3 (NOT RECOM.)
combo_def_8: AWG Trigger 4 (NOT RECOM.)
combo_def_9: High
combo_def_10: Low
combo_def_11: Trigger Input 1
combo_def_12: Trigger Input 2
combo_def_13: Trigger Input 3
combo_def_14: Trigger Input 4
combo_def_15: Trigger Input 5
combo_def_16: Trigger Input 6
combo_def_17: Trigger Input 7
combo_def_18: Trigger Input 8
cmd_def_1: 4
cmd_def_2: 5
cmd_def_3: 6
cmd_def_4: 7
cmd_def_5: 0
cmd_def_6: 1
cmd_def_7: 2
cmd_def_8: 3
cmd_def_9: 17
cmd_def_10: 18
cmd_def_11: 8
cmd_def_12: 9
cmd_def_13: 10
cmd_def_14: 11
cmd_def_15: 12
cmd_def_16: 13
cmd_def_17: 14
cmd_def_18: 15
def_value: AWG Trigger 1
group: Route marker outputs
section: Markers
set_cmd: int /%s/triggers/out/1/source
get_cmd: int /%s/triggers/out/1/source
tooltip: Select signal assigned to the corresponding marker output.

[Marker 3]
label: Assign signal to marker output 3
datatype: COMBO
combo_def_1: Output 3 Marker 1
combo_def_2: Output 3 Marker 2
combo_def_3: Output 4 Marker 1
combo_def_4: Output 4 Marker 2
combo_def_5: AWG Trigger 1 (NOT RECOM.)
combo_def_6: AWG Trigger 2
combo_def_7: AWG Trigger 3 (NOT RECOM.)
combo_def_8: AWG Trigger 4 (NOT RECOM.)
combo_def_9: High
combo_def_10: Low
combo_def_11: Trigger Input 1
combo_def_12: Trigger Input 2
combo_def_13: Trigger Input 3
combo_def_14: Trigger Input 4
combo_def_15: Trigger Input 5
combo_def_16: Trigger Input 6
combo_def_17: Trigger Input 7
combo_def_18: Trigger Input 8
cmd_def_1: 4
cmd_def_2: 5
cmd_def_3: 6
cmd_def_4: 7
cmd_def_5: 0
cmd_def_6: 1
cmd_def_7: 2
cmd_def_8: 3
cmd_def_9: 17
cmd_def_10: 18
cmd_def_11: 8
cmd_def_12: 9
cmd_def_13: 10
cmd_def_14: 11
cmd_def_15: 12
cmd_def_16: 13
cmd_def_17: 14
cmd_def_18: 15
def_value: AWG Trigger 2
group: Route marker outputs
section: Markers
set_cmd: int /%s/triggers/out/2/source
get_cmd: int /%s/triggers/out/2/source
tooltip: Select signal assigned to the corresponding marker output.

[Marker 4]
label: Assign signal to marker output 4
datatype: COMBO
combo_def_1: Output 3 Marker 1
combo_def_2: Output 3 Marker 2
combo_def_3: Output 4 Marker 1
combo_def_4: Output 4 Marker 2
combo_def_5: AWG Trigger 1 (NOT RECOM.)
combo_def_6: AWG Trigger 2
combo_def_7: AWG Trigger 3 (NOT RECOM.)
combo_def_8: AWG Trigger 4 (NOT RECOM.)
combo_def_9: High
combo_def_10: Low
combo_def_11: Trigger Input 1
combo_def_12: Trigger Input 2
combo_def_13: Trigger Input 3
combo_def_14: Trigger Input 4
combo_def_15: Trigger Input 5
combo_def_16: Trigger Input 6
combo_def_17: Trigger Input 7
combo_def_18: Trigger Input 8
cmd_def_1: 4
cmd_def_2: 5
cmd_def_3: 6
cmd_def_4: 7
cmd_def_5: 0
cmd_def_6: 1
cmd_def_7: 2
cmd_def_8: 3
cmd_def_9: 17
cmd_def_10: 18
cmd_def_11: 8
cmd_def_12: 9
cmd_def_13: 10
cmd_def_14: 11
cmd_def_15: 12
cmd_def_16: 13
cmd_def_17: 14
cmd_def_18: 15
def_value: AWG Trigger 2
group: Route marker outputs
section: Markers
set_cmd: int /%s/triggers/out/3/source
get_cmd: int /%s/triggers/out/3/source
tooltip: Select signal assigned to the corresponding marker output.

[Marker 5]
label: Assign signal to marker output 5
datatype: COMBO
combo_def_1: Output 5 Marker 1
combo_def_2: Output 5 Marker 2
combo_def_3: Output 6 Marker 1
combo_def_4: Output 6 Marker 2
combo_def_5: AWG Trigger 1 (NOT RECOM.)
combo_def_6: AWG Trigger 2 (NOT RECOM.)
combo_def_7: AWG Trigger 3
combo_def_8: AWG Trigger 4 (NOT RECOM.)
combo_def_9: High
combo_def_10: Low
combo_def_11: Trigger Input 1
combo_def_12: Trigger Input 2
combo_def_13: Trigger Input 3
combo_def_14: Trigger Input 4
combo_def_15: Trigger Input 5
combo_def_16: Trigger Input 6
combo_def_17: Trigger Input 7
combo_def_18: Trigger Input 8
cmd_def_1: 4
cmd_def_2: 5
cmd_def_3: 6
cmd_def_4: 7
cmd_def_5: 0
cmd_def_6: 1
cmd_def_7: 2
cmd_def_8: 3
cmd_def_9: 17
cmd_def_10: 18
cmd_def_11: 8
cmd_def_12: 9
cmd_def_13: 10
cmd_def_14: 11
cmd_def_15: 12
cmd_def_16: 13
cmd_def_17: 14
cmd_def_18: 15
def_value: AWG Trigger 3
group: Route marker outputs
section: Markers
set_cmd: int /%s/triggers/out/4/source
get_cmd: int /%s/triggers/out/4/source
tooltip: Select signal assigned to the corresponding marker output.

[Marker 6]
label: Assign signal to marker output 6
datatype: COMBO
combo_def_1: Output 5 Marker 1
combo_def_2: Output 5 Marker 2
combo_def_3: Output 6 Marker 1
combo_def_4: Output 6 Marker 2
combo_def_5: AWG Trigger 1 (NOT RECOM.)
combo_def_6: AWG Trigger 2 (NOT RECOM.)
combo_def_7: AWG Trigger 3
combo_def_8: AWG Trigger 4 (NOT RECOM.)
combo_def_9: High
combo_def_10: Low
combo_def_11: Trigger Input 1
combo_def_12: Trigger Input 2
combo_def_13: Trigger Input 3
combo_def_14: Trigger Input 4
combo_def_15: Trigger Input 5
combo_def_16: Trigger Input 6
combo_def_17: Trigger Input 7
combo_def_18: Trigger Input 8
cmd_def_1: 4
cmd_def_2: 5
cmd_def_3: 6
cmd_def_4: 7
cmd_def_5: 0
cmd_def_6: 1
cmd_def_7: 2
cmd_def_8: 3
cmd_def_9: 17
cmd_def_10: 18
cmd_def_11: 8
cmd_def_12: 9
cmd_def_13: 10
cmd_def_14: 11
cmd_def_15: 12
cmd_def_16: 13
cmd_def_17: 14
cmd_def_18: 15
def_value: AWG Trigger 3
group: Route marker outputs
section: Markers
set_cmd: int /%s/triggers/out/5/source
get_cmd: int /%s/triggers/out/5/source
tooltip: Select signal assigned to the corresponding marker output.

[Marker 7]
label: Assign signal to marker output 7
datatype: COMBO
combo_def_1: Output 7 Marker 1
combo_def_2: Output 7 Marker 2
combo_def_3: Output 8 Marker 1
combo_def_4: Output 8 Marker 2
combo_def_5: AWG Trigger 1 (NOT RECOM.)
combo_def_6: AWG Trigger 2 (NOT RECOM.)
combo_def_7: AWG Trigger 3 (NOT RECOM.)
combo_def_8: AWG Trigger 4
combo_def_9: High
combo_def_10: Low
combo_def_11: Trigger Input 1
combo_def_12: Trigger Input 2
combo_def_13: Trigger Input 3
combo_def_14: Trigger Input 4
combo_def_15: Trigger Input 5
combo_def_16: Trigger Input 6
combo_def_17: Trigger Input 7
combo_def_18: Trigger Input 8
cmd_def_1: 4
cmd_def_2: 5
cmd_def_3: 6
cmd_def_4: 7
cmd_def_5: 0
cmd_def_6: 1
cmd_def_7: 2
cmd_def_8: 3
cmd_def_9: 17
cmd_def_10: 18
cmd_def_11: 8
cmd_def_12: 9
cmd_def_13: 10
cmd_def_14: 11
cmd_def_15: 12
cmd_def_16: 13
cmd_def_17: 14
cmd_def_18: 15
def_value: AWG Trigger 4
group: Route marker outputs
section: Markers
set_cmd: int /%s/triggers/out/6/source
get_cmd: int /%s/triggers/out/6/source
tooltip: Select signal assigned to the corresponding marker output.

[Marker 8]
label: Assign signal to marker output 8
datatype: COMBO
combo_def_1: Output 7 Marker 1
combo_def_2: Output 7 Marker 2
combo_def_3: Output 8 Marker 1
combo_def_4: Output 8 Marker 2
combo_def_5: AWG Trigger 1 (NOT RECOM.)
combo_def_6: AWG Trigger 2 (NOT RECOM.)
combo_def_7: AWG Trigger 3 (NOT RECOM.)
combo_def_8: AWG Trigger 4
combo_def_9: High
combo_def_10: Low
combo_def_11: Trigger Input 1
combo_def_12: Trigger Input 2
combo_def_13: Trigger Input 3
combo_def_14: Trigger Input 4
combo_def_15: Trigger Input 5
combo_def_16: Trigger Input 6
combo_def_17: Trigger Input 7
combo_def_18: Trigger Input 8
cmd_def_1: 4
cmd_def_2: 5
cmd_def_3: 6
cmd_def_4: 7
cmd_def_5: 0
cmd_def_6: 1
cmd_def_7: 2
cmd_def_8: 3
cmd_def_9: 17
cmd_def_10: 18
cmd_def_11: 8
cmd_def_12: 9
cmd_def_13: 10
cmd_def_14: 11
cmd_def_15: 12
cmd_def_16: 13
cmd_def_17: 14
cmd_def_18: 15
def_value: AWG Trigger 4
group: Route marker outputs
section: Markers
set_cmd: int /%s/triggers/out/7/source
get_cmd: int /%s/triggers/out/7/source
tooltip: Select signal assigned to the corresponding marker output.




[Output 1 Marker 1 start time]
label: Marker 1 start time
datatype: DOUBLE
low_lim: 0.0
def_value: 0.0
unit: s
group: Waveform markers in waveform on output 1
section: Markers
tooltip: Sets the start time of this waveform marker, counting from the first sample in the AWG's loaded waveform.
set_cmd: other /%s/marker_config
get_cmd: other /%s/marker_config

[Output 1 Marker 1 duration]
label: Marker 1 duration
datatype: DOUBLE
low_lim: 0.0
def_value: 0.0
unit: s
group: Waveform markers in waveform on output 1
section: Markers
tooltip: Sets the playback duration of this waveform marker.
set_cmd: other /%s/marker_config
get_cmd: other /%s/marker_config

; [Output 1 Marker 2 start time]
; label: Marker 2 start time
; datatype: DOUBLE
; low_lim: 0.0
; def_value: 0.0
; unit: s
; group: Waveform markers in waveform on output 1
; section: Markers
; tooltip: Sets the start time of this waveform marker, counting from the first sample in the AWG's loaded waveform.
; set_cmd: other /%s/marker_config
; get_cmd: other /%s/marker_config

; [Output 1 Marker 2 duration]
; label: Marker 2 duration
; datatype: DOUBLE
; low_lim: 0.0
; def_value: 0.0
; unit: s
; group: Waveform markers in waveform on output 1
; section: Markers
; tooltip: Sets the playback duration of this waveform marker.
; set_cmd: other /%s/marker_config
; get_cmd: other /%s/marker_config


[Output 2 Marker 1 start time]
label: Marker 1 start time
datatype: DOUBLE
low_lim: 0.0
def_value: 0.0
unit: s
group: Waveform markers in waveform on output 2
section: Markers
tooltip: Sets the start time of this waveform marker, counting from the first sample in the AWG's loaded waveform.
set_cmd: other /%s/marker_config
get_cmd: other /%s/marker_config

[Output 2 Marker 1 duration]
label: Marker 1 duration
datatype: DOUBLE
low_lim: 0.0
def_value: 0.0
unit: s
group: Waveform markers in waveform on output 2
section: Markers
tooltip: Sets the playback duration of this waveform marker.
set_cmd: other /%s/marker_config
get_cmd: other /%s/marker_config

; [Output 2 Marker 2 start time]
; label: Marker 2 start time
; datatype: DOUBLE
; low_lim: 0.0
; def_value: 0.0
; unit: s
; group: Waveform markers in waveform on output 2
; section: Markers
; tooltip: Sets the start time of this waveform marker, counting from the first sample in the AWG's loaded waveform.
; set_cmd: other /%s/marker_config
; get_cmd: other /%s/marker_config

; [Output 2 Marker 2 duration]
; label: Marker 2 duration
; datatype: DOUBLE
; low_lim: 0.0
; def_value: 0.0
; unit: s
; group: Waveform markers in waveform on output 2
; section: Markers
; tooltip: Sets the playback duration of this waveform marker.
; set_cmd: other /%s/marker_config
; get_cmd: other /%s/marker_config


[Output 3 Marker 1 start time]
label: Marker 1 start time
datatype: DOUBLE
low_lim: 0.0
def_value: 0.0
unit: s
group: Waveform markers in waveform on output 3
section: Markers
tooltip: Sets the start time of this waveform marker, counting from the first sample in the AWG's loaded waveform.
set_cmd: other /%s/marker_config
get_cmd: other /%s/marker_config

[Output 3 Marker 1 duration]
label: Marker 1 duration
datatype: DOUBLE
low_lim: 0.0
def_value: 0.0
unit: s
group: Waveform markers in waveform on output 3
section: Markers
tooltip: Sets the playback duration of this waveform marker.
set_cmd: other /%s/marker_config
get_cmd: other /%s/marker_config

; [Output 3 Marker 2 start time]
; label: Marker 2 start time
; datatype: DOUBLE
; low_lim: 0.0
; def_value: 0.0
; unit: s
; group: Waveform markers in waveform on output 3
; section: Markers
; tooltip: Sets the start time of this waveform marker, counting from the first sample in the AWG's loaded waveform.
; set_cmd: other /%s/marker_config
; get_cmd: other /%s/marker_config

; [Output 3 Marker 2 duration]
; label: Marker 2 duration
; datatype: DOUBLE
; low_lim: 0.0
; def_value: 0.0
; unit: s
; group: Waveform markers in waveform on output 3
; section: Markers
; tooltip: Sets the playback duration of this waveform marker.
; set_cmd: other /%s/marker_config
; get_cmd: other /%s/marker_config


[Output 4 Marker 1 start time]
label: Marker 1 start time
datatype: DOUBLE
low_lim: 0.0
def_value: 0.0
unit: s
group: Waveform markers in waveform on output 4
section: Markers
tooltip: Sets the start time of this waveform marker, counting from the first sample in the AWG's loaded waveform.
set_cmd: other /%s/marker_config
get_cmd: other /%s/marker_config

[Output 4 Marker 1 duration]
label: Marker 1 duration
datatype: DOUBLE
low_lim: 0.0
def_value: 0.0
unit: s
group: Waveform markers in waveform on output 4
section: Markers
tooltip: Sets the playback duration of this waveform marker.
set_cmd: other /%s/marker_config
get_cmd: other /%s/marker_config

; [Output 4 Marker 2 start time]
; label: Marker 2 start time
; datatype: DOUBLE
; low_lim: 0.0
; def_value: 0.0
; unit: s
; group: Waveform markers in waveform on output 4
; section: Markers
; tooltip: Sets the start time of this waveform marker, counting from the first sample in the AWG's loaded waveform.
; set_cmd: other /%s/marker_config
; get_cmd: other /%s/marker_config

; [Output 4 Marker 2 duration]
; label: Marker 2 duration
; datatype: DOUBLE
; low_lim: 0.0
; def_value: 0.0
; unit: s
; group: Waveform markers in waveform on output 4
; section: Markers
; tooltip: Sets the playback duration of this waveform marker.
; set_cmd: other /%s/marker_config
; get_cmd: other /%s/marker_config


[Output 5 Marker 1 start time]
label: Marker 1 start time
datatype: DOUBLE
low_lim: 0.0
def_value: 0.0
unit: s
group: Waveform markers in waveform on output 5
section: Markers
tooltip: Sets the start time of this waveform marker, counting from the first sample in the AWG's loaded waveform.
set_cmd: other /%s/marker_config
get_cmd: other /%s/marker_config

[Output 5 Marker 1 duration]
label: Marker 1 duration
datatype: DOUBLE
low_lim: 0.0
def_value: 0.0
unit: s
group: Waveform markers in waveform on output 5
section: Markers
tooltip: Sets the playback duration of this waveform marker.
set_cmd: other /%s/marker_config
get_cmd: other /%s/marker_config

; [Output 5 Marker 2 start time]
; label: Marker 2 start time
; datatype: DOUBLE
; low_lim: 0.0
; def_value: 0.0
; unit: s
; group: Waveform markers in waveform on output 5
; section: Markers
; tooltip: Sets the start time of this waveform marker, counting from the first sample in the AWG's loaded waveform.
; set_cmd: other /%s/marker_config
; get_cmd: other /%s/marker_config

; [Output 5 Marker 2 duration]
; label: Marker 2 duration
; datatype: DOUBLE
; low_lim: 0.0
; def_value: 0.0
; unit: s
; group: Waveform markers in waveform on output 5
; section: Markers
; tooltip: Sets the playback duration of this waveform marker.
; set_cmd: other /%s/marker_config
; get_cmd: other /%s/marker_config


[Output 6 Marker 1 start time]
label: Marker 1 start time
datatype: DOUBLE
low_lim: 0.0
def_value: 0.0
unit: s
group: Waveform markers in waveform on output 6
section: Markers
tooltip: Sets the start time of this waveform marker, counting from the first sample in the AWG's loaded waveform.
set_cmd: other /%s/marker_config
get_cmd: other /%s/marker_config

[Output 6 Marker 1 duration]
label: Marker 1 duration
datatype: DOUBLE
low_lim: 0.0
def_value: 0.0
unit: s
group: Waveform markers in waveform on output 6
section: Markers
tooltip: Sets the playback duration of this waveform marker.
set_cmd: other /%s/marker_config
get_cmd: other /%s/marker_config

; [Output 6 Marker 2 start time]
; label: Marker 2 start time
; datatype: DOUBLE
; low_lim: 0.0
; def_value: 0.0
; unit: s
; group: Waveform markers in waveform on output 6
; section: Markers
; tooltip: Sets the start time of this waveform marker, counting from the first sample in the AWG's loaded waveform.
; set_cmd: other /%s/marker_config
; get_cmd: other /%s/marker_config

; [Output 6 Marker 2 duration]
; label: Marker 2 duration
; datatype: DOUBLE
; low_lim: 0.0
; def_value: 0.0
; unit: s
; group: Waveform markers in waveform on output 6
; section: Markers
; tooltip: Sets the playback duration of this waveform marker.
; set_cmd: other /%s/marker_config
; get_cmd: other /%s/marker_config


[Output 7 Marker 1 start time]
label: Marker 1 start time
datatype: DOUBLE
low_lim: 0.0
def_value: 0.0
unit: s
group: Waveform markers in waveform on output 7
section: Markers
tooltip: Sets the start time of this waveform marker, counting from the first sample in the AWG's loaded waveform.
set_cmd: other /%s/marker_config
get_cmd: other /%s/marker_config

[Output 7 Marker 1 duration]
label: Marker 1 duration
datatype: DOUBLE
low_lim: 0.0
def_value: 0.0
unit: s
group: Waveform markers in waveform on output 7
section: Markers
tooltip: Sets the playback duration of this waveform marker.
set_cmd: other /%s/marker_config
get_cmd: other /%s/marker_config

; [Output 7 Marker 2 start time]
; label: Marker 2 start time
; datatype: DOUBLE
; low_lim: 0.0
; def_value: 0.0
; unit: s
; group: Waveform markers in waveform on output 7
; section: Markers
; tooltip: Sets the start time of this waveform marker, counting from the first sample in the AWG's loaded waveform.
; set_cmd: other /%s/marker_config
; get_cmd: other /%s/marker_config

; [Output 7 Marker 2 duration]
; label: Marker 2 duration
; datatype: DOUBLE
; low_lim: 0.0
; def_value: 0.0
; unit: s
; group: Waveform markers in waveform on output 7
; section: Markers
; tooltip: Sets the playback duration of this waveform marker.
; set_cmd: other /%s/marker_config
; get_cmd: other /%s/marker_config


[Output 8 Marker 1 start time]
label: Marker 1 start time
datatype: DOUBLE
low_lim: 0.0
def_value: 0.0
unit: s
group: Waveform markers in waveform on output 8
section: Markers
tooltip: Sets the start time of this waveform marker, counting from the first sample in the AWG's loaded waveform.
set_cmd: other /%s/marker_config
get_cmd: other /%s/marker_config

[Output 8 Marker 1 duration]
label: Marker 1 duration
datatype: DOUBLE
low_lim: 0.0
def_value: 0.0
unit: s
group: Waveform markers in waveform on output 8
section: Markers
tooltip: Sets the playback duration of this waveform marker.
set_cmd: other /%s/marker_config
get_cmd: other /%s/marker_config

; [Output 8 Marker 2 start time]
; label: Marker 2 start time
; datatype: DOUBLE
; low_lim: 0.0
; def_value: 0.0
; unit: s
; group: Waveform markers in waveform on output 8
; section: Markers
; tooltip: Sets the start time of this waveform marker, counting from the first sample in the AWG's loaded waveform.
; set_cmd: other /%s/marker_config
; get_cmd: other /%s/marker_config

; [Output 8 Marker 2 duration]
; label: Marker 2 duration
; datatype: DOUBLE
; low_lim: 0.0
; def_value: 0.0
; unit: s
; group: Waveform markers in waveform on output 8
; section: Markers
; tooltip: Sets the playback duration of this waveform marker.
; set_cmd: other /%s/marker_config
; get_cmd: other /%s/marker_config



#######################################################################
### Oscillators #######################################################
#######################################################################

[Oscillator frequency 1]
label: Oscillator 1
datatype: DOUBLE
def_value: 75e6
high_lim: 900e6
low_lim: -900e6
state_quant: Minimise inter-device asynchronous jitter
state_value_1: False
unit: Hz
group: Oscillator frequencies (Oscs. 1 and 2 may be reserved)
section: Oscillators
set_cmd: double /%s/oscs/0/freq
get_cmd: double /%s/oscs/0/freq

[Oscillator frequency 2]
label: Oscillator 2
datatype: DOUBLE
def_value: 10e6
high_lim: 900e6
low_lim: -900e6
state_quant: Use oscillator-based repetition delay
state_value_1: False
unit: Hz
group: Oscillator frequencies (Oscs. 1 and 2 may be reserved)
section: Oscillators
set_cmd: double /%s/oscs/1/freq
get_cmd: double /%s/oscs/1/freq

[Oscillator frequency 3]
label: Oscillator 3
datatype: DOUBLE
def_value: 10e6
high_lim: 900e6
low_lim: -900e6
unit: Hz
group: Oscillator frequencies (Oscs. 1 and 2 may be reserved)
section: Oscillators
set_cmd: double /%s/oscs/2/freq
get_cmd: double /%s/oscs/2/freq

[Oscillator frequency 4]
label: Oscillator 4
datatype: DOUBLE
def_value: 10e6
high_lim: 900e6
low_lim: -900e6
unit: Hz
group: Oscillator frequencies (Oscs. 1 and 2 may be reserved)
section: Oscillators
set_cmd: double /%s/oscs/3/freq
get_cmd: double /%s/oscs/3/freq

[Oscillator frequency 5]
label: Oscillator 5
datatype: DOUBLE
def_value: 10e6
high_lim: 900e6
low_lim: -900e6
unit: Hz
group: Oscillator frequencies (Oscs. 1 and 2 may be reserved)
section: Oscillators
set_cmd: double /%s/oscs/4/freq
get_cmd: double /%s/oscs/4/freq

[Oscillator frequency 6]
label: Oscillator 6
datatype: DOUBLE
def_value: 10e6
high_lim: 900e6
low_lim: -900e6
unit: Hz
group: Oscillator frequencies (Oscs. 1 and 2 may be reserved)
section: Oscillators
set_cmd: double /%s/oscs/5/freq
get_cmd: double /%s/oscs/5/freq

[Oscillator frequency 7]
label: Oscillator 7
datatype: DOUBLE
def_value: 10e6
high_lim: 900e6
low_lim: -900e6
unit: Hz
group: Oscillator frequencies (Oscs. 1 and 2 may be reserved)
section: Oscillators
set_cmd: double /%s/oscs/6/freq
get_cmd: double /%s/oscs/6/freq

[Oscillator frequency 8]
label: Oscillator 8
datatype: DOUBLE
def_value: 10e6
high_lim: 900e6
low_lim: -900e6
unit: Hz
group: Oscillator frequencies (Oscs. 1 and 2 may be reserved)
section: Oscillators
set_cmd: double /%s/oscs/7/freq
get_cmd: double /%s/oscs/7/freq

[Oscillator frequency 9]
label: Oscillator 9
datatype: DOUBLE
def_value: 10e6
high_lim: 900e6
low_lim: -900e6
unit: Hz
group: Oscillator frequencies (Oscs. 1 and 2 may be reserved)
section: Oscillators
set_cmd: double /%s/oscs/8/freq
get_cmd: double /%s/oscs/8/freq

[Oscillator frequency 10]
label: Oscillator 10
datatype: DOUBLE
def_value: 10e6
high_lim: 900e6
low_lim: -900e6
unit: Hz
group: Oscillator frequencies (Oscs. 1 and 2 may be reserved)
section: Oscillators
set_cmd: double /%s/oscs/9/freq
get_cmd: double /%s/oscs/9/freq

[Oscillator frequency 11]
label: Oscillator 11
datatype: DOUBLE
def_value: 10e6
high_lim: 900e6
low_lim: -900e6
unit: Hz
group: Oscillator frequencies (Oscs. 1 and 2 may be reserved)
section: Oscillators
set_cmd: double /%s/oscs/10/freq
get_cmd: double /%s/oscs/10/freq

[Oscillator frequency 12]
label: Oscillator 12
datatype: DOUBLE
def_value: 10e6
high_lim: 900e6
low_lim: -900e6
unit: Hz
group: Oscillator frequencies (Oscs. 1 and 2 may be reserved)
section: Oscillators
set_cmd: double /%s/oscs/11/freq
get_cmd: double /%s/oscs/11/freq

[Oscillator frequency 13]
label: Oscillator 13
datatype: DOUBLE
def_value: 10e6
high_lim: 900e6
low_lim: -900e6
unit: Hz
group: Oscillator frequencies (Oscs. 1 and 2 may be reserved)
section: Oscillators
set_cmd: double /%s/oscs/12/freq
get_cmd: double /%s/oscs/12/freq

[Oscillator frequency 14]
label: Oscillator 14
datatype: DOUBLE
def_value: 10e6
high_lim: 900e6
low_lim: -900e6
unit: Hz
group: Oscillator frequencies (Oscs. 1 and 2 may be reserved)
section: Oscillators
set_cmd: double /%s/oscs/13/freq
get_cmd: double /%s/oscs/13/freq

[Oscillator frequency 15]
label: Oscillator 15
datatype: DOUBLE
def_value: 10e6
high_lim: 900e6
low_lim: -900e6
unit: Hz
group: Oscillator frequencies (Oscs. 1 and 2 may be reserved)
section: Oscillators
set_cmd: double /%s/oscs/14/freq
get_cmd: double /%s/oscs/14/freq

[Oscillator frequency 16]
label: Oscillator 16
datatype: DOUBLE
def_value: 10e6
high_lim: 900e6
low_lim: -900e6
unit: Hz
group: Oscillator frequencies (Oscs. 1 and 2 may be reserved)
section: Oscillators
set_cmd: double /%s/oscs/15/freq
get_cmd: double /%s/oscs/15/freq


#######################################################################
### Sine generators ###################################################
#######################################################################

[Sine 1 - Oscillator]
label: Select oscillator
datatype: COMBO
combo_def_1: 1
combo_def_2: 2
combo_def_3: 3
combo_def_4: 4
combo_def_5: 5
combo_def_6: 6
combo_def_7: 7
combo_def_8: 8
combo_def_9: 9
combo_def_10: 10
combo_def_11: 11
combo_def_12: 12
combo_def_13: 13
combo_def_14: 14
combo_def_15: 15
combo_def_16: 16
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
cmd_def_4: 3
cmd_def_5: 4
cmd_def_6: 5
cmd_def_7: 6
cmd_def_8: 7
cmd_def_9: 8
cmd_def_10: 9
cmd_def_11: 10
cmd_def_12: 11
cmd_def_13: 12
cmd_def_14: 13
cmd_def_15: 14
cmd_def_16: 15
def_value: 1
group: Sine generator 1
section: Sine generators
tooltip: Select oscillator to use for the generated sine signal.
set_cmd: int /%s/sines/0/oscselect
get_cmd: int /%s/sines/0/oscselect

[Sine 1 - Harmonic]
label: Harmonic
datatype: DOUBLE
def_value: 1
low_lim: 1
group: Sine generator 1
section: Sine generators
set_cmd: double /%s/sines/0/harmonic
get_cmd: double /%s/sines/0/harmonic

[Sine 1 - Phase]
label: Phase
datatype: DOUBLE
unit: deg
def_value: 0
high_lim: 180.0
low_lim: -180.0
group: Sine generator 1
section: Sine generators
set_cmd: double /%s/sines/0/phaseshift
get_cmd: double /%s/sines/0/phaseshift


[Sine 2 - Oscillator]
label: Select oscillator
datatype: COMBO
combo_def_1: 1
combo_def_2: 2
combo_def_3: 3
combo_def_4: 4
combo_def_5: 5
combo_def_6: 6
combo_def_7: 7
combo_def_8: 8
combo_def_9: 9
combo_def_10: 10
combo_def_11: 11
combo_def_12: 12
combo_def_13: 13
combo_def_14: 14
combo_def_15: 15
combo_def_16: 16
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
cmd_def_4: 3
cmd_def_5: 4
cmd_def_6: 5
cmd_def_7: 6
cmd_def_8: 7
cmd_def_9: 8
cmd_def_10: 9
cmd_def_11: 10
cmd_def_12: 11
cmd_def_13: 12
cmd_def_14: 13
cmd_def_15: 14
cmd_def_16: 15
def_value: 2
group: Sine generator 2
section: Sine generators
tooltip: Select oscillator to use for the generated sine signal.
set_cmd: int /%s/sines/1/oscselect
get_cmd: int /%s/sines/1/oscselect

[Sine 2 - Harmonic]
label: Harmonic
datatype: DOUBLE
def_value: 1
low_lim: 1
group: Sine generator 2
section: Sine generators
set_cmd: double /%s/sines/1/harmonic
get_cmd: double /%s/sines/1/harmonic

[Sine 2 - Phase]
label: Phase
datatype: DOUBLE
unit: deg
def_value: 0
high_lim: 180.0
low_lim: -180.0
group: Sine generator 2
section: Sine generators
set_cmd: double /%s/sines/1/phaseshift
get_cmd: double /%s/sines/1/phaseshift


[Sine 3 - Oscillator]
label: Select oscillator
datatype: COMBO
combo_def_1: 1
combo_def_2: 2
combo_def_3: 3
combo_def_4: 4
combo_def_5: 5
combo_def_6: 6
combo_def_7: 7
combo_def_8: 8
combo_def_9: 9
combo_def_10: 10
combo_def_11: 11
combo_def_12: 12
combo_def_13: 13
combo_def_14: 14
combo_def_15: 15
combo_def_16: 16
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
cmd_def_4: 3
cmd_def_5: 4
cmd_def_6: 5
cmd_def_7: 6
cmd_def_8: 7
cmd_def_9: 8
cmd_def_10: 9
cmd_def_11: 10
cmd_def_12: 11
cmd_def_13: 12
cmd_def_14: 13
cmd_def_15: 14
cmd_def_16: 15
def_value: 3
group: Sine generator 3
section: Sine generators
tooltip: Select oscillator to use for the generated sine signal.
set_cmd: int /%s/sines/2/oscselect
get_cmd: int /%s/sines/2/oscselect

[Sine 3 - Harmonic]
label: Harmonic
datatype: DOUBLE
def_value: 1
low_lim: 1
group: Sine generator 3
section: Sine generators
set_cmd: double /%s/sines/2/harmonic
get_cmd: double /%s/sines/2/harmonic

[Sine 3 - Phase]
label: Phase
datatype: DOUBLE
unit: deg
def_value: 0
high_lim: 180.0
low_lim: -180.0
group: Sine generator 3
section: Sine generators
set_cmd: double /%s/sines/2/phaseshift
get_cmd: double /%s/sines/2/phaseshift


[Sine 4 - Oscillator]
label: Select oscillator
datatype: COMBO
combo_def_1: 1
combo_def_2: 2
combo_def_3: 3
combo_def_4: 4
combo_def_5: 5
combo_def_6: 6
combo_def_7: 7
combo_def_8: 8
combo_def_9: 9
combo_def_10: 10
combo_def_11: 11
combo_def_12: 12
combo_def_13: 13
combo_def_14: 14
combo_def_15: 15
combo_def_16: 16
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
cmd_def_4: 3
cmd_def_5: 4
cmd_def_6: 5
cmd_def_7: 6
cmd_def_8: 7
cmd_def_9: 8
cmd_def_10: 9
cmd_def_11: 10
cmd_def_12: 11
cmd_def_13: 12
cmd_def_14: 13
cmd_def_15: 14
cmd_def_16: 15
def_value: 4
group: Sine generator 4
section: Sine generators
tooltip: Select oscillator to use for the generated sine signal.
set_cmd: int /%s/sines/3/oscselect
get_cmd: int /%s/sines/3/oscselect

[Sine 4 - Harmonic]
label: Harmonic
datatype: DOUBLE
def_value: 1
low_lim: 1
group: Sine generator 4
section: Sine generators
set_cmd: double /%s/sines/3/harmonic
get_cmd: double /%s/sines/3/harmonic

[Sine 4 - Phase]
label: Phase
datatype: DOUBLE
unit: deg
def_value: 0
high_lim: 180.0
low_lim: -180.0
group: Sine generator 4
section: Sine generators
set_cmd: double /%s/sines/3/phaseshift
get_cmd: double /%s/sines/3/phaseshift


[Sine 5 - Oscillator]
label: Select oscillator
datatype: COMBO
combo_def_1: 1
combo_def_2: 2
combo_def_3: 3
combo_def_4: 4
combo_def_5: 5
combo_def_6: 6
combo_def_7: 7
combo_def_8: 8
combo_def_9: 9
combo_def_10: 10
combo_def_11: 11
combo_def_12: 12
combo_def_13: 13
combo_def_14: 14
combo_def_15: 15
combo_def_16: 16
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
cmd_def_4: 3
cmd_def_5: 4
cmd_def_6: 5
cmd_def_7: 6
cmd_def_8: 7
cmd_def_9: 8
cmd_def_10: 9
cmd_def_11: 10
cmd_def_12: 11
cmd_def_13: 12
cmd_def_14: 13
cmd_def_15: 14
cmd_def_16: 15
def_value: 5
group: Sine generator 5
section: Sine generators
tooltip: Select oscillator to use for the generated sine signal.
set_cmd: int /%s/sines/4/oscselect
get_cmd: int /%s/sines/4/oscselect

[Sine 5 - Harmonic]
label: Harmonic
datatype: DOUBLE
def_value: 1
low_lim: 1
group: Sine generator 5
section: Sine generators
set_cmd: double /%s/sines/4/harmonic
get_cmd: double /%s/sines/4/harmonic

[Sine 5 - Phase]
label: Phase
datatype: DOUBLE
unit: deg
def_value: 0
high_lim: 180.0
low_lim: -180.0
group: Sine generator 5
section: Sine generators
set_cmd: double /%s/sines/4/phaseshift
get_cmd: double /%s/sines/4/phaseshift


[Sine 6 - Oscillator]
label: Select oscillator
datatype: COMBO
combo_def_1: 1
combo_def_2: 2
combo_def_3: 3
combo_def_4: 4
combo_def_5: 5
combo_def_6: 6
combo_def_7: 7
combo_def_8: 8
combo_def_9: 9
combo_def_10: 10
combo_def_11: 11
combo_def_12: 12
combo_def_13: 13
combo_def_14: 14
combo_def_15: 15
combo_def_16: 16
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
cmd_def_4: 3
cmd_def_5: 4
cmd_def_6: 5
cmd_def_7: 6
cmd_def_8: 7
cmd_def_9: 8
cmd_def_10: 9
cmd_def_11: 10
cmd_def_12: 11
cmd_def_13: 12
cmd_def_14: 13
cmd_def_15: 14
cmd_def_16: 15
def_value: 6
group: Sine generator 6
section: Sine generators
tooltip: Select oscillator to use for the generated sine signal.
set_cmd: int /%s/sines/5/oscselect
get_cmd: int /%s/sines/5/oscselect

[Sine 6 - Harmonic]
label: Harmonic
datatype: DOUBLE
def_value: 1
low_lim: 1
group: Sine generator 6
section: Sine generators
set_cmd: double /%s/sines/5/harmonic
get_cmd: double /%s/sines/5/harmonic

[Sine 6 - Phase]
label: Phase
datatype: DOUBLE
unit: deg
def_value: 0
high_lim: 180.0
low_lim: -180.0
group: Sine generator 6
section: Sine generators
set_cmd: double /%s/sines/5/phaseshift
get_cmd: double /%s/sines/5/phaseshift


[Sine 7 - Oscillator]
label: Select oscillator
datatype: COMBO
combo_def_1: 1
combo_def_2: 2
combo_def_3: 3
combo_def_4: 4
combo_def_5: 5
combo_def_6: 6
combo_def_7: 7
combo_def_8: 8
combo_def_9: 9
combo_def_10: 10
combo_def_11: 11
combo_def_12: 12
combo_def_13: 13
combo_def_14: 14
combo_def_15: 15
combo_def_16: 16
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
cmd_def_4: 3
cmd_def_5: 4
cmd_def_6: 5
cmd_def_7: 6
cmd_def_8: 7
cmd_def_9: 8
cmd_def_10: 9
cmd_def_11: 10
cmd_def_12: 11
cmd_def_13: 12
cmd_def_14: 13
cmd_def_15: 14
cmd_def_16: 15
def_value: 7
group: Sine generator 7
section: Sine generators
tooltip: Select oscillator to use for the generated sine signal.
set_cmd: int /%s/sines/6/oscselect
get_cmd: int /%s/sines/6/oscselect

[Sine 7 - Harmonic]
label: Harmonic
datatype: DOUBLE
def_value: 1
low_lim: 1
group: Sine generator 7
section: Sine generators
set_cmd: double /%s/sines/6/harmonic
get_cmd: double /%s/sines/6/harmonic

[Sine 7 - Phase]
label: Phase
datatype: DOUBLE
unit: deg
def_value: 0
high_lim: 180.0
low_lim: -180.0
group: Sine generator 7
section: Sine generators
set_cmd: double /%s/sines/6/phaseshift
get_cmd: double /%s/sines/6/phaseshift


[Sine 8 - Oscillator]
label: Select oscillator
datatype: COMBO
combo_def_1: 1
combo_def_2: 2
combo_def_3: 3
combo_def_4: 4
combo_def_5: 5
combo_def_6: 6
combo_def_7: 7
combo_def_8: 8
combo_def_9: 9
combo_def_10: 10
combo_def_11: 11
combo_def_12: 12
combo_def_13: 13
combo_def_14: 14
combo_def_15: 15
combo_def_16: 16
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
cmd_def_4: 3
cmd_def_5: 4
cmd_def_6: 5
cmd_def_7: 6
cmd_def_8: 7
cmd_def_9: 8
cmd_def_10: 9
cmd_def_11: 10
cmd_def_12: 11
cmd_def_13: 12
cmd_def_14: 13
cmd_def_15: 14
cmd_def_16: 15
def_value: 8
group: Sine generator 8
section: Sine generators
tooltip: Select oscillator to use for the generated sine signal.
set_cmd: int /%s/sines/7/oscselect
get_cmd: int /%s/sines/7/oscselect

[Sine 8 - Harmonic]
label: Harmonic
datatype: DOUBLE
def_value: 1
low_lim: 1
group: Sine generator 8
section: Sine generators
set_cmd: double /%s/sines/7/harmonic
get_cmd: double /%s/sines/7/harmonic

[Sine 8 - Phase]
label: Phase
datatype: DOUBLE
unit: deg
def_value: 0
high_lim: 180.0
low_lim: -180.0
group: Sine generator 8
section: Sine generators
set_cmd: double /%s/sines/7/phaseshift
get_cmd: double /%s/sines/7/phaseshift


#######################################################################
### Outputs and waveform generators ###################################
#######################################################################

; [Channel 1 - Enabled]
; label: Enabled
; datatype: BOOLEAN
; def_value: True
; group: Output 1
; section: Outputs

; [Channel 1 - Enable Sine 1]
; label: Enable Sine 1
; datatype: BOOLEAN
; def_value: False
; group: Output 1
; section: Outputs
; set_cmd: /sines/0/enables/0
; get_cmd: /sines/0/enables/0

; [Channel 1 - Amplitude Sine 1]
; label: Amplitude Sine 1
; datatype: DOUBLE
; unit: V
; def_value: 1.0
;state_quant: Channel 1 - Enable Sine 1
;state_value_1: 1
; group: Output 1
; section: Outputs
; set_cmd: double /%s/sines/0/amplitudes/0
; get_cmd: double /%s/sines/0/amplitudes/0

;[Channel 1 - Enable Sine 2]
;label: Enable Sine 2
;datatype: BOOLEAN
;def_value: False
;group: Output 1
;section: Outputs
;set_cmd: /sines/1/enables/0
;get_cmd: /sines/1/enables/0

; [Channel 1 - Amplitude Sine 2]
; label: Amplitude Sine 2
; datatype: DOUBLE
; unit: V
; def_value: 1.0
; state_quant: Channel 1 - Enable Sine 2
; state_value_1: 1
; group: Output 1
; section: Outputs
; set_cmd: double /%s/sines/1/amplitudes/0
; get_cmd: double /%s/sines/1/amplitudes/0

[Channel 1 - Output]
label: Output signal
datatype: BOOLEAN
def_value: False
group: Output and AWG 1
section: Outputs
set_cmd: boolean /%s/sigouts/0/on
get_cmd: boolean /%s/sigouts/0/on

[Channel 1 - Bypass DAC to port]
label: Bypass DAC to port
datatype: BOOLEAN
def_value: False
group: Output and AWG 1
section: Outputs
tooltip: Connect DAC to connector, bypassing amplifier and anti-aliasing filter. Gives highest bandwidth and lowest broadband noise, fixes range to 800 mV. Known as 'Direct output.'
set_cmd: other /%s/sigouts/0/direct
get_cmd: boolean /%s/sigouts/0/direct

[Channel 1 - Filter]
label: Filter
datatype: BOOLEAN
tooltip: Enables the analogue output filter.
def_value: False
state_quant: Channel 1 - Bypass DAC to port
state_value_1: False
group: Output and AWG 1
section: Outputs
set_cmd: boolean /%s/sigouts/0/filter
get_cmd: boolean /%s/sigouts/0/filter

[Channel 1 - Range]
label: Range
datatype: COMBO
combo_def_1: +/- 5 V
combo_def_2: +/- 4 V
combo_def_3: +/- 3 V
combo_def_4: +/- 2 V
combo_def_5: +/- 1 V
combo_def_6: +/- 800 mV
combo_def_7: +/- 600 mV
combo_def_8: +/- 400 mV
combo_def_9: +/- 200 mV
cmd_def_1: 5.0
cmd_def_2: 4.0
cmd_def_3: 3.0
cmd_def_4: 2.0
cmd_def_5: 1.0
cmd_def_6: 0.8
cmd_def_7: 0.6
cmd_def_8: 0.4
cmd_def_9: 0.2
def_value: +/- 1 V
state_quant: Channel 1 - Bypass DAC to port
state_value_1: False
group: Output and AWG 1
section: Outputs
set_cmd: other /%s/sigouts/0/range
get_cmd: other /%s/sigouts/0/range
# Remember that Range does not return a nice, rounded number.

[Channel 1 - Offset]
label: Offset
datatype: DOUBLE
unit: V
def_value: 0.0
high_lim: 3.400
low_lim: -3.400
group: Output and AWG 1
section: Outputs
set_cmd: double /%s/sigouts/0/offset
get_cmd: double /%s/sigouts/0/offset

[Channel 1 - Delay]
label: Delay
datatype: DOUBLE
unit: s
def_value: 0.0
high_lim: 26.25e-9
low_lim: 0.0
group: Output and AWG 1
section: Outputs
set_cmd: double /%s/sigouts/0/delay
get_cmd: double /%s/sigouts/0/delay

[Channel 1 AWG - Amplitude scaling]
label: Amplitude scaling
datatype: DOUBLE
def_value: 1
group: Output and AWG 1
section: Outputs
low_lim: -1.0
high_lim: 1.0
set_cmd: double /%s/awgs/0/outputs/0/amplitude
get_cmd: double /%s/awgs/0/outputs/0/amplitude

[Channel 1 AWG - Modulation]
label: Modulation
datatype: COMBO
combo_def_1: Off
combo_def_2: Sine 1
combo_def_3: Sine 2
combo_def_4: Advanced
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
cmd_def_4: 5
def_value: Off
group: Output and AWG 1
section: Outputs
set_cmd: int /%s/awgs/0/outputs/0/modulation/mode
get_cmd: int /%s/awgs/0/outputs/0/modulation/mode

[Channel 1 AWG - Hold last value]
label: Hold last value
datatype: BOOLEAN
def_value: False
group: Output and AWG 1
section: Outputs
tooltip: Hold the last played sample constant on the output after finishing playback. Waveforms will be padded if necessary to a multiple of 16.
set_cmd: boolean /%s/awgs/0/outputs/0/hold
get_cmd: boolean /%s/awgs/0/outputs/0/hold


; [Channel 2 - Enabled]
; label: Enabled
; datatype: BOOLEAN
; def_value: False
; group: Output 2
; section: Outputs

; [Channel 2 - Enable Sine 1]
; label: Enable Sine 1
; datatype: BOOLEAN
; def_value: False
; group: Output 2
; section: Outputs
; set_cmd: /sines/0/enables/1
; get_cmd: /sines/0/enables/1

; [Channel 2 - Amplitude Sine 1]
; label: Amplitude Sine 1
; datatype: DOUBLE
; unit: V
; def_value: 1.0
; state_quant: Channel 2 - Enable Sine 1
; state_value_1: 1
; group: Output 2
; section: Outputs
; set_cmd: /sines/0/amplitudes/1
; get_cmd: /sines/0/amplitudes/1

; [Channel 2 - Enable Sine 2]
; label: Enable Sine 2
; datatype: BOOLEAN
; def_value: False
; group: Output 2
; section: Outputs
; set_cmd: /sines/1/enables/1
; get_cmd: /sines/1/enables/1

; [Channel 2 - Amplitude Sine 2]
; label: Amplitude Sine 2
; datatype: DOUBLE
; unit: V
; def_value: 1.0
; state_quant: Channel 2 - Enable Sine 2
; state_value_1: 1
; group: Output 2
; section: Outputs
; set_cmd: /sines/1/amplitudes/1
; get_cmd: /sines/1/amplitudes/1

[Channel 2 - Output]
label: Output signal
datatype: BOOLEAN
def_value: False
group: Output and AWG 2
section: Outputs
set_cmd: boolean /%s/sigouts/1/on
get_cmd: boolean /%s/sigouts/1/on

[Channel 2 - Bypass DAC to port]
label: Bypass DAC to port
datatype: BOOLEAN
def_value: False
group: Output and AWG 2
section: Outputs
tooltip: Connect DAC to connector, bypassing amplifier and anti-aliasing filter. Gives highest bandwidth and lowest broadband noise, fixes range to 800 mV. Known as 'Direct output.'
set_cmd: other /%s/sigouts/1/direct
get_cmd: boolean /%s/sigouts/1/direct

[Channel 2 - Filter]
label: Filter
datatype: BOOLEAN
tooltip: Enables the analogue output filter.
def_value: False
state_quant: Channel 2 - Bypass DAC to port
state_value_1: False
group: Output and AWG 2
section: Outputs
set_cmd: boolean /%s/sigouts/1/filter
get_cmd: boolean /%s/sigouts/1/filter

[Channel 2 - Range]
label: Range
datatype: COMBO
combo_def_1: +/- 5 V
combo_def_2: +/- 4 V
combo_def_3: +/- 3 V
combo_def_4: +/- 2 V
combo_def_5: +/- 1 V
combo_def_6: +/- 800 mV
combo_def_7: +/- 600 mV
combo_def_8: +/- 400 mV
combo_def_9: +/- 200 mV
cmd_def_1: 5.0
cmd_def_2: 4.0
cmd_def_3: 3.0
cmd_def_4: 2.0
cmd_def_5: 1.0
cmd_def_6: 0.8
cmd_def_7: 0.6
cmd_def_8: 0.4
cmd_def_9: 0.2
def_value: +/- 1 V
state_quant: Channel 2 - Bypass DAC to port
state_value_1: False
group: Output and AWG 2
section: Outputs
set_cmd: other /%s/sigouts/1/range
get_cmd: other /%s/sigouts/1/range
# Remember that Range does not return a nice, rounded number.

[Channel 2 - Offset]
label: Offset
datatype: DOUBLE
unit: V
def_value: 0.0
high_lim: 3.400
low_lim: -3.400
group: Output and AWG 2
section: Outputs
set_cmd: double /%s/sigouts/1/offset
get_cmd: double /%s/sigouts/1/offset

[Channel 2 - Delay]
label: Delay
datatype: DOUBLE
unit: s
def_value: 0.0
high_lim: 26.25e-9
low_lim: 0.0
group: Output and AWG 2
section: Outputs
set_cmd: double /%s/sigouts/1/delay
get_cmd: double /%s/sigouts/1/delay

[Channel 2 AWG - Amplitude scaling]
label: Amplitude scaling
datatype: DOUBLE
def_value: 1
group: Output and AWG 2
section: Outputs
low_lim: -1.0
high_lim: 1.0
set_cmd: double /%s/awgs/0/outputs/1/amplitude
get_cmd: double /%s/awgs/0/outputs/1/amplitude

[Channel 2 AWG - Modulation]
label: Modulation
datatype: COMBO
combo_def_1: Off
combo_def_2: Sine 1
combo_def_3: Sine 2
combo_def_4: Advanced
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
cmd_def_4: 5
def_value: Off
group: Output and AWG 2
section: Outputs
set_cmd: int /%s/awgs/0/outputs/1/modulation/mode
get_cmd: int /%s/awgs/0/outputs/1/modulation/mode

[Channel 2 AWG - Hold last value]
label: Hold last value
datatype: BOOLEAN
def_value: False
group: Output and AWG 2
section: Outputs
tooltip: Hold the last played sample constant on the output after finishing playback. Waveforms will be padded if necessary to a multiple of 16.
set_cmd: boolean /%s/awgs/0/outputs/1/hold
get_cmd: boolean /%s/awgs/0/outputs/1/hold



; [Channel 3 - Enabled]
; label: Enabled
; datatype: BOOLEAN
; def_value: True
; group: Output 3
; section: Outputs

; [Channel 3 - Enable Sine 3]
; label: Enable Sine 3
; datatype: BOOLEAN
; def_value: False
; group: Output 3
; section: Outputs
; set_cmd: /sines/2/enables/0
; get_cmd: /sines/2/enables/0

; [Channel 3 - Amplitude Sine 3]
; label: Amplitude Sine 3
; datatype: DOUBLE
; unit: V
; def_value: 1.0
; state_quant: Channel 3 - Enable Sine 3
; state_value_1: 1
; group: Output 3
; section: Outputs
; set_cmd: /sines/2/amplitudes/0
; get_cmd: /sines/2/amplitudes/0

; [Channel 3 - Enable Sine 4]
; label: Enable Sine 4
; datatype: BOOLEAN
; def_value: False
; group: Output 3
; section: Outputs
; set_cmd: /sines/3/enables/0
; get_cmd: /sines/3/enables/0

; [Channel 3 - Amplitude Sine 4]
; label: Amplitude Sine 4
; datatype: DOUBLE
; unit: V
; def_value: 1.0
; state_quant: Channel 3 - Enable Sine 4
; state_value_1: 1
; group: Output 3
; section: Outputs
; set_cmd: /sines/3/amplitudes/0
; get_cmd: /sines/3/amplitudes/0

[Channel 3 - Output]
label: Output signal
datatype: BOOLEAN
def_value: False
group: Output and AWG 3
section: Outputs
set_cmd: boolean /%s/sigouts/2/on
get_cmd: boolean /%s/sigouts/2/on

[Channel 3 - Bypass DAC to port]
label: Bypass DAC to port
datatype: BOOLEAN
def_value: False
group: Output and AWG 3
section: Outputs
tooltip: Connect DAC to connector, bypassing amplifier and anti-aliasing filter. Gives highest bandwidth and lowest broadband noise, fixes range to 800 mV. Known as 'Direct output.'
set_cmd: other /%s/sigouts/2/direct
get_cmd: boolean /%s/sigouts/2/direct

[Channel 3 - Filter]
label: Filter
datatype: BOOLEAN
tooltip: Enables the analogue output filter.
def_value: False
state_quant: Channel 3 - Bypass DAC to port
state_value_1: False
group: Output and AWG 3
section: Outputs
set_cmd: boolean /%s/sigouts/2/filter
get_cmd: boolean /%s/sigouts/2/filter

[Channel 3 - Range]
label: Range
datatype: COMBO
combo_def_1: +/- 5 V
combo_def_2: +/- 4 V
combo_def_3: +/- 3 V
combo_def_4: +/- 2 V
combo_def_5: +/- 1 V
combo_def_6: +/- 800 mV
combo_def_7: +/- 600 mV
combo_def_8: +/- 400 mV
combo_def_9: +/- 200 mV
cmd_def_1: 5.0
cmd_def_2: 4.0
cmd_def_3: 3.0
cmd_def_4: 2.0
cmd_def_5: 1.0
cmd_def_6: 0.8
cmd_def_7: 0.6
cmd_def_8: 0.4
cmd_def_9: 0.2
def_value: +/- 1 V
state_quant: Channel 3 - Bypass DAC to port
state_value_1: False
group: Output and AWG 3
section: Outputs
set_cmd: other /%s/sigouts/2/range
get_cmd: other /%s/sigouts/2/range
# Remember that Range does not return a nice, rounded number.

[Channel 3 - Offset]
label: Offset
datatype: DOUBLE
unit: V
def_value: 0.0
high_lim: 3.400
low_lim: -3.400
group: Output and AWG 3
section: Outputs
set_cmd: double /%s/sigouts/2/offset
get_cmd: double /%s/sigouts/2/offset

[Channel 3 - Delay]
label: Delay
datatype: DOUBLE
unit: s
def_value: 0.0
high_lim: 26.25e-9
low_lim: 0.0
group: Output and AWG 3
section: Outputs
set_cmd: double /%s/sigouts/2/delay
get_cmd: double /%s/sigouts/2/delay

[Channel 3 AWG - Amplitude scaling]
label: Amplitude scaling
datatype: DOUBLE
def_value: 1
group: Output and AWG 3
section: Outputs
low_lim: -1.0
high_lim: 1.0
set_cmd: double /%s/awgs/1/outputs/0/amplitude
get_cmd: double /%s/awgs/1/outputs/0/amplitude

[Channel 3 AWG - Modulation]
label: Modulation
datatype: COMBO
combo_def_1: Off
combo_def_2: Sine 3
combo_def_3: Sine 4
combo_def_4: Advanced
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
cmd_def_4: 5
def_value: Off
group: Output and AWG 3
section: Outputs
set_cmd: int /%s/awgs/1/outputs/0/modulation/mode
get_cmd: int /%s/awgs/1/outputs/0/modulation/mode

[Channel 3 AWG - Hold last value]
label: Hold last value
datatype: BOOLEAN
def_value: False
group: Output and AWG 3
section: Outputs
tooltip: Hold the last played sample constant on the output after finishing playback. Waveforms will be padded if necessary to a multiple of 16.
set_cmd: boolean /%s/awgs/1/outputs/0/hold
get_cmd: boolean /%s/awgs/1/outputs/0/hold



; [Channel 4 - Enabled]
; label: Enabled
; datatype: BOOLEAN
; def_value: False
; group: Output 4
; section: Outputs

; [Channel 4 - Enable Sine 3]
; label: Enable Sine 3
; datatype: BOOLEAN
; def_value: False
; group: Output 4
; section: Outputs
; set_cmd: /sines/2/enables/1
; get_cmd: /sines/2/enables/1

; [Channel 4 - Amplitude Sine 3]
; label: Amplitude Sine 3
; datatype: DOUBLE
; unit: V
; def_value: 1.0
; state_quant: Channel 4 - Enable Sine 3
; state_value_1: 1
; group: Output 4
; section: Outputs
; set_cmd: /sines/2/amplitudes/1
; get_cmd: /sines/2/amplitudes/1

; [Channel 4 - Enable Sine 4]
; label: Enable Sine 4
; datatype: BOOLEAN
; def_value: False
; group: Output 4
; section: Outputs
; set_cmd: /sines/3/enables/1
; get_cmd: /sines/3/enables/1

; [Channel 4 - Amplitude Sine 4]
; label: Amplitude Sine 4
; datatype: DOUBLE
; unit: V
; def_value: 1.0
; state_quant: Channel 4 - Enable Sine 4
; state_value_1: 1
; group: Output 4
; section: Outputs
; set_cmd: /sines/3/amplitudes/1
; get_cmd: /sines/3/amplitudes/1

[Channel 4 - Output]
label: Output signal
datatype: BOOLEAN
def_value: False
group: Output and AWG 4
section: Outputs
set_cmd: boolean /%s/sigouts/3/on
get_cmd: boolean /%s/sigouts/3/on

[Channel 4 - Bypass DAC to port]
label: Bypass DAC to port
datatype: BOOLEAN
def_value: False
group: Output and AWG 4
section: Outputs
tooltip: Connect DAC to connector, bypassing amplifier and anti-aliasing filter. Gives highest bandwidth and lowest broadband noise, fixes range to 800 mV. Known as 'Direct output.'
set_cmd: other /%s/sigouts/3/direct
get_cmd: boolean /%s/sigouts/3/direct

[Channel 4 - Filter]
label: Filter
datatype: BOOLEAN
tooltip: Enables the analogue output filter.
def_value: False
state_quant: Channel 4 - Bypass DAC to port
state_value_1: False
group: Output and AWG 4
section: Outputs
set_cmd: boolean /%s/sigouts/3/filter
get_cmd: boolean /%s/sigouts/3/filter

[Channel 4 - Range]
label: Range
datatype: COMBO
combo_def_1: +/- 5 V
combo_def_2: +/- 4 V
combo_def_3: +/- 3 V
combo_def_4: +/- 2 V
combo_def_5: +/- 1 V
combo_def_6: +/- 800 mV
combo_def_7: +/- 600 mV
combo_def_8: +/- 400 mV
combo_def_9: +/- 200 mV
cmd_def_1: 5.0
cmd_def_2: 4.0
cmd_def_3: 3.0
cmd_def_4: 2.0
cmd_def_5: 1.0
cmd_def_6: 0.8
cmd_def_7: 0.6
cmd_def_8: 0.4
cmd_def_9: 0.2
def_value: +/- 1 V
state_quant: Channel 4 - Bypass DAC to port
state_value_1: False
group: Output and AWG 4
section: Outputs
set_cmd: other /%s/sigouts/3/range
get_cmd: other /%s/sigouts/3/range
# Remember that Range does not return a nice, rounded number.

[Channel 4 - Offset]
label: Offset
datatype: DOUBLE
unit: V
def_value: 0.0
high_lim: 3.400
low_lim: -3.400
group: Output and AWG 4
section: Outputs
set_cmd: double /%s/sigouts/3/offset
get_cmd: double /%s/sigouts/3/offset

[Channel 4 - Delay]
label: Delay
datatype: DOUBLE
unit: s
def_value: 0.0
high_lim: 26.25e-9
low_lim: 0.0
group: Output and AWG 4
section: Outputs
set_cmd: double /%s/sigouts/3/delay
get_cmd: double /%s/sigouts/3/delay

[Channel 4 AWG - Amplitude scaling]
label: Amplitude scaling
datatype: DOUBLE
def_value: 1
group: Output and AWG 4
section: Outputs
low_lim: -1.0
high_lim: 1.0
set_cmd: double /%s/awgs/1/outputs/1/amplitude
get_cmd: double /%s/awgs/1/outputs/1/amplitude

[Channel 4 AWG - Modulation]
label: Modulation
datatype: COMBO
combo_def_1: Off
combo_def_2: Sine 3
combo_def_3: Sine 4
combo_def_4: Advanced
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
cmd_def_4: 5
def_value: Off
group: Output and AWG 4
section: Outputs
set_cmd: int /%s/awgs/1/outputs/1/modulation/mode
get_cmd: int /%s/awgs/1/outputs/1/modulation/mode

[Channel 4 AWG - Hold last value]
label: Hold last value
datatype: BOOLEAN
def_value: False
group: Output and AWG 4
section: Outputs
tooltip: Hold the last played sample constant on the output after finishing playback. Waveforms will be padded if necessary to a multiple of 16.
set_cmd: boolean /%s/awgs/1/outputs/1/hold
get_cmd: boolean /%s/awgs/1/outputs/1/hold



; [Channel 5 - Enabled]
; label: Enabled
; datatype: BOOLEAN
; def_value: True
; group: Output 5
; section: Outputs

; [Channel 5 - Enable Sine 5]
; label: Enable Sine 5
; datatype: BOOLEAN
; def_value: False
; group: Output 5
; section: Outputs
; set_cmd: /sines/4/enables/0
; get_cmd: /sines/4/enables/0

; [Channel 5 - Amplitude Sine 5]
; label: Amplitude Sine 5
; datatype: DOUBLE
; unit: V
; def_value: 1.0
; state_quant: Channel 5 - Enable Sine 5
; state_value_1: 1
; group: Output 5
; section: Outputs
; set_cmd: /sines/4/amplitudes/0
; get_cmd: /sines/4/amplitudes/0

; [Channel 5 - Enable Sine 6]
; label: Enable Sine 6
; datatype: BOOLEAN
; def_value: False
; group: Output 5
; section: Outputs
; set_cmd: /sines/5/enables/0
; get_cmd: /sines/5/enables/0

; [Channel 5 - Amplitude Sine 6]
; label: Amplitude Sine 6
; datatype: DOUBLE
; unit: V
; def_value: 1.0
; state_quant: Channel 5 - Enable Sine 6
; state_value_1: 1
; group: Output 5
; section: Outputs
; set_cmd: /sines/5/amplitudes/0
; get_cmd: /sines/5/amplitudes/0

[Channel 5 - Output]
label: Output signal
datatype: BOOLEAN
def_value: False
group: Output and AWG 5
section: Outputs
set_cmd: boolean /%s/sigouts/4/on
get_cmd: boolean /%s/sigouts/4/on

[Channel 5 - Bypass DAC to port]
label: Bypass DAC to port
datatype: BOOLEAN
def_value: False
group: Output and AWG 5
section: Outputs
tooltip: Connect DAC to connector, bypassing amplifier and anti-aliasing filter. Gives highest bandwidth and lowest broadband noise, fixes range to 800 mV. Known as 'Direct output.'
set_cmd: other /%s/sigouts/4/direct
get_cmd: boolean /%s/sigouts/4/direct

[Channel 5 - Filter]
label: Filter
datatype: BOOLEAN
tooltip: Enables the analogue output filter.
def_value: False
state_quant: Channel 5 - Bypass DAC to port
state_value_1: False
group: Output and AWG 5
section: Outputs
set_cmd: boolean /%s/sigouts/4/filter
get_cmd: boolean /%s/sigouts/4/filter

[Channel 5 - Range]
label: Range
datatype: COMBO
combo_def_1: +/- 5 V
combo_def_2: +/- 4 V
combo_def_3: +/- 3 V
combo_def_4: +/- 2 V
combo_def_5: +/- 1 V
combo_def_6: +/- 800 mV
combo_def_7: +/- 600 mV
combo_def_8: +/- 400 mV
combo_def_9: +/- 200 mV
cmd_def_1: 5.0
cmd_def_2: 4.0
cmd_def_3: 3.0
cmd_def_4: 2.0
cmd_def_5: 1.0
cmd_def_6: 0.8
cmd_def_7: 0.6
cmd_def_8: 0.4
cmd_def_9: 0.2
def_value: +/- 1 V
state_quant: Channel 5 - Bypass DAC to port
state_value_1: False
group: Output and AWG 5
section: Outputs
set_cmd: other /%s/sigouts/4/range
get_cmd: other /%s/sigouts/4/range
# Remember that Range does not return a nice, rounded number.

[Channel 5 - Offset]
label: Offset
datatype: DOUBLE
unit: V
def_value: 0.0
high_lim: 3.400
low_lim: -3.400
group: Output and AWG 5
section: Outputs
set_cmd: double /%s/sigouts/4/offset
get_cmd: double /%s/sigouts/4/offset

[Channel 5 - Delay]
label: Delay
datatype: DOUBLE
unit: s
def_value: 0.0
high_lim: 26.25e-9
low_lim: 0.0
group: Output and AWG 5
section: Outputs
set_cmd: double /%s/sigouts/4/delay
get_cmd: double /%s/sigouts/4/delay

[Channel 5 AWG - Amplitude scaling]
label: Amplitude scaling
datatype: DOUBLE
def_value: 1
group: Output and AWG 5
section: Outputs
low_lim: -1.0
high_lim: 1.0
set_cmd: double /%s/awgs/2/outputs/0/amplitude
get_cmd: double /%s/awgs/2/outputs/0/amplitude

[Channel 5 AWG - Modulation]
label: Modulation
datatype: COMBO
combo_def_1: Off
combo_def_2: Sine 5
combo_def_3: Sine 6
combo_def_4: Advanced
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
cmd_def_4: 5
def_value: Off
group: Output and AWG 5
section: Outputs
set_cmd: int /%s/awgs/2/outputs/0/modulation/mode
get_cmd: int /%s/awgs/2/outputs/0/modulation/mode

[Channel 5 AWG - Hold last value]
label: Hold last value
datatype: BOOLEAN
def_value: False
group: Output and AWG 5
section: Outputs
tooltip: Hold the last played sample constant on the output after finishing playback. Waveforms will be padded if necessary to a multiple of 16.
set_cmd: boolean /%s/awgs/2/outputs/0/hold
get_cmd: boolean /%s/awgs/2/outputs/0/hold



; [Channel 6 - Enabled]
; label: Enabled
; datatype: BOOLEAN
; def_value: False
; group: Output 6
; section: Outputs

; [Channel 6 - Enable Sine 5]
; label: Enable Sine 5
; datatype: BOOLEAN
; def_value: False
; group: Output 6
; section: Outputs
; set_cmd: /sines/4/enables/1
; get_cmd: /sines/4/enables/1

; [Channel 6 - Amplitude Sine 5]
; label: Amplitude Sine 5
; datatype: DOUBLE
; unit: V
; def_value: 1.0
; state_quant: Channel 6 - Enable Sine 5
; state_value_1: 1
; group: Output 6
; section: Outputs
; set_cmd: /sines/4/amplitudes/1
; get_cmd: /sines/4/amplitudes/1

; [Channel 6 - Enable Sine 6]
; label: Enable Sine 6
; datatype: BOOLEAN
; def_value: False
; group: Output 6
; section: Outputs
; set_cmd: /sines/5/enables/1
; get_cmd: /sines/5/enables/1

; [Channel 6 - Amplitude Sine 6]
; label: Amplitude Sine 6
; datatype: DOUBLE
; unit: V
; def_value: 1.0
; state_quant: Channel 6 - Enable Sine 6
; state_value_1: 1
; group: Output 6
; section: Outputs
; set_cmd: /sines/5/amplitudes/1
; get_cmd: /sines/5/amplitudes/1

[Channel 6 - Output]
label: Output signal
datatype: BOOLEAN
def_value: False
group: Output and AWG 6
section: Outputs
set_cmd: boolean /%s/sigouts/5/on
get_cmd: boolean /%s/sigouts/5/on

[Channel 6 - Bypass DAC to port]
label: Bypass DAC to port
datatype: BOOLEAN
def_value: False
group: Output and AWG 6
section: Outputs
tooltip: Connect DAC to connector, bypassing amplifier and anti-aliasing filter. Gives highest bandwidth and lowest broadband noise, fixes range to 800 mV. Known as 'Direct output.'
set_cmd: other /%s/sigouts/5/direct
get_cmd: boolean /%s/sigouts/5/direct

[Channel 6 - Filter]
label: Filter
datatype: BOOLEAN
tooltip: Enables the analogue output filter.
def_value: False
state_quant: Channel 6 - Bypass DAC to port
state_value_1: False
group: Output and AWG 6
section: Outputs
set_cmd: boolean /%s/sigouts/5/filter
get_cmd: boolean /%s/sigouts/5/filter

[Channel 6 - Range]
label: Range
datatype: COMBO
combo_def_1: +/- 5 V
combo_def_2: +/- 4 V
combo_def_3: +/- 3 V
combo_def_4: +/- 2 V
combo_def_5: +/- 1 V
combo_def_6: +/- 800 mV
combo_def_7: +/- 600 mV
combo_def_8: +/- 400 mV
combo_def_9: +/- 200 mV
cmd_def_1: 5.0
cmd_def_2: 4.0
cmd_def_3: 3.0
cmd_def_4: 2.0
cmd_def_5: 1.0
cmd_def_6: 0.8
cmd_def_7: 0.6
cmd_def_8: 0.4
cmd_def_9: 0.2
def_value: +/- 1 V
state_quant: Channel 6 - Bypass DAC to port
state_value_1: False
group: Output and AWG 6
section: Outputs
set_cmd: other /%s/sigouts/5/range
get_cmd: other /%s/sigouts/5/range
# Remember that Range does not return a nice, rounded number.

[Channel 6 - Offset]
label: Offset
datatype: DOUBLE
unit: V
def_value: 0.0
high_lim: 3.400
low_lim: -3.400
group: Output and AWG 6
section: Outputs
set_cmd: double /%s/sigouts/5/offset
get_cmd: double /%s/sigouts/5/offset

[Channel 6 - Delay]
label: Delay
datatype: DOUBLE
unit: s
def_value: 0.0
high_lim: 26.25e-9
low_lim: 0.0
group: Output and AWG 6
section: Outputs
set_cmd: double /%s/sigouts/5/delay
get_cmd: double /%s/sigouts/5/delay

[Channel 6 AWG - Amplitude scaling]
label: Amplitude scaling
datatype: DOUBLE
def_value: 1
group: Output and AWG 6
section: Outputs
low_lim: -1.0
high_lim: 1.0
set_cmd: double /%s/awgs/2/outputs/1/amplitude
get_cmd: double /%s/awgs/2/outputs/1/amplitude

[Channel 6 AWG - Modulation]
label: Modulation
datatype: COMBO
combo_def_1: Off
combo_def_2: Sine 5
combo_def_3: Sine 6
combo_def_4: Advanced
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
cmd_def_4: 5
def_value: Off
group: Output and AWG 6
section: Outputs
set_cmd: int /%s/awgs/2/outputs/1/modulation/mode
get_cmd: int /%s/awgs/2/outputs/1/modulation/mode

[Channel 6 AWG - Hold last value]
label: Hold last value
datatype: BOOLEAN
def_value: False
group: Output and AWG 6
section: Outputs
tooltip: Hold the last played sample constant on the output after finishing playback. Waveforms will be padded if necessary to a multiple of 16.
set_cmd: boolean /%s/awgs/2/outputs/1/hold
get_cmd: boolean /%s/awgs/2/outputs/1/hold



; [Channel 7 - Enabled]
; label: Enabled
; datatype: BOOLEAN
; def_value: True
; group: Output 7
; section: Outputs

; [Channel 7 - Enable Sine 7]
; label: Enable Sine 7
; datatype: BOOLEAN
; def_value: False
; group: Output 7
; section: Outputs
; set_cmd: /sines/6/enables/0
; get_cmd: /sines/6/enables/0

; [Channel 7 - Amplitude Sine 7]
; label: Amplitude Sine 7
; datatype: DOUBLE
; unit: V
; def_value: 1.0
; state_quant: Channel 7 - Enable Sine 7
; state_value_1: 1
; group: Output 7
; section: Outputs
; set_cmd: /sines/6/amplitudes/0
; get_cmd: /sines/6/amplitudes/0

; [Channel 7 - Enable Sine 8]
; label: Enable Sine 8
; datatype: BOOLEAN
; def_value: False
; group: Output 7
; section: Outputs
; set_cmd: /sines/7/enables/0
; get_cmd: /sines/7/enables/0

; [Channel 7 - Amplitude Sine 8]
; label: Amplitude Sine 8
; datatype: DOUBLE
; unit: V
; def_value: 1.0
; state_quant: Channel 7 - Enable Sine 8
; state_value_1: 1
; group: Output 7
; section: Outputs
; set_cmd: /sines/7/amplitudes/0
; get_cmd: /sines/7/amplitudes/0

[Channel 7 - Output]
label: Output signal
datatype: BOOLEAN
def_value: False
group: Output and AWG 7
section: Outputs
set_cmd: boolean /%s/sigouts/6/on
get_cmd: boolean /%s/sigouts/6/on

[Channel 7 - Bypass DAC to port]
label: Bypass DAC to port
datatype: BOOLEAN
def_value: False
group: Output and AWG 7
section: Outputs
tooltip: Connect DAC to connector, bypassing amplifier and anti-aliasing filter. Gives highest bandwidth and lowest broadband noise, fixes range to 800 mV. Known as 'Direct output.'
set_cmd: other /%s/sigouts/6/direct
get_cmd: boolean /%s/sigouts/6/direct

[Channel 7 - Filter]
label: Filter
datatype: BOOLEAN
tooltip: Enables the analogue output filter.
def_value: False
state_quant: Channel 7 - Bypass DAC to port
state_value_1: False
group: Output and AWG 7
section: Outputs
set_cmd: boolean /%s/sigouts/6/filter
get_cmd: boolean /%s/sigouts/6/filter

[Channel 7 - Range]
label: Range
datatype: COMBO
combo_def_1: +/- 5 V
combo_def_2: +/- 4 V
combo_def_3: +/- 3 V
combo_def_4: +/- 2 V
combo_def_5: +/- 1 V
combo_def_6: +/- 800 mV
combo_def_7: +/- 600 mV
combo_def_8: +/- 400 mV
combo_def_9: +/- 200 mV
cmd_def_1: 5.0
cmd_def_2: 4.0
cmd_def_3: 3.0
cmd_def_4: 2.0
cmd_def_5: 1.0
cmd_def_6: 0.8
cmd_def_7: 0.6
cmd_def_8: 0.4
cmd_def_9: 0.2
def_value: +/- 1 V
state_quant: Channel 7 - Bypass DAC to port
state_value_1: False
group: Output and AWG 7
section: Outputs
set_cmd: other /%s/sigouts/6/range
get_cmd: other /%s/sigouts/6/range
# Remember that Range does not return a nice, rounded number.

[Channel 7 - Offset]
label: Offset
datatype: DOUBLE
unit: V
def_value: 0.0
high_lim: 3.400
low_lim: -3.400
group: Output and AWG 7
section: Outputs
set_cmd: double /%s/sigouts/6/offset
get_cmd: double /%s/sigouts/6/offset

[Channel 7 - Delay]
label: Delay
datatype: DOUBLE
unit: s
def_value: 0.0
high_lim: 26.25e-9
low_lim: 0.0
group: Output and AWG 7
section: Outputs
set_cmd: double /%s/sigouts/6/delay
get_cmd: double /%s/sigouts/6/delay

[Channel 7 AWG - Amplitude scaling]
label: Amplitude scaling
datatype: DOUBLE
def_value: 1
group: Output and AWG 7
section: Outputs
low_lim: -1.0
high_lim: 1.0
set_cmd: double /%s/awgs/3/outputs/0/amplitude
get_cmd: double /%s/awgs/3/outputs/0/amplitude

[Channel 7 AWG - Modulation]
label: Modulation
datatype: COMBO
combo_def_1: Off
combo_def_2: Sine 7
combo_def_3: Sine 8
combo_def_4: Advanced
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
cmd_def_4: 5
def_value: Off
group: Output and AWG 7
section: Outputs
set_cmd: int /%s/awgs/3/outputs/0/modulation/mode
get_cmd: int /%s/awgs/3/outputs/0/modulation/mode

[Channel 7 AWG - Hold last value]
label: Hold last value
datatype: BOOLEAN
def_value: False
group: Output and AWG 7
section: Outputs
tooltip: Hold the last played sample constant on the output after finishing playback. Waveforms will be padded if necessary to a multiple of 16.
set_cmd: boolean /%s/awgs/3/outputs/0/hold
get_cmd: boolean /%s/awgs/3/outputs/0/hold



; [Channel 8 - Enabled]
; label: Enabled
; datatype: BOOLEAN
; def_value: False
; group: Output 8
; section: Outputs

; [Channel 8 - Enable Sine 7]
; label: Enable Sine 7
; datatype: BOOLEAN
; def_value: False
; group: Output 8
; section: Outputs
; set_cmd: /sines/6/enables/1
; get_cmd: /sines/6/enables/1

; [Channel 8 - Amplitude Sine 7]
; label: Amplitude Sine 7
; datatype: DOUBLE
; unit: V
; def_value: 1.0
; state_quant: Channel 8 - Enable Sine 7
; state_value_1: 1
; group: Output 8
; section: Outputs
; set_cmd: /sines/6/amplitudes/1
; get_cmd: /sines/6/amplitudes/1

; [Channel 8 - Enable Sine 8]
; label: Enable Sine 8
; datatype: BOOLEAN
; def_value: False
; group: Output 8
; section: Outputs
; set_cmd: /sines/7/enables/1
; get_cmd: /sines/7/enables/1

; [Channel 8 - Amplitude Sine 8]
; label: Amplitude Sine 8
; datatype: DOUBLE
; unit: V
; def_value: 1.0
; state_quant: Channel 8 - Enable Sine 8
; state_value_1: 1
; group: Output 8
; section: Outputs
; set_cmd: /sines/7/amplitudes/1
; get_cmd: /sines/7/amplitudes/1

[Channel 8 - Output]
label: Output signal
datatype: BOOLEAN
def_value: False
group: Output and AWG 8
section: Outputs
set_cmd: boolean /%s/sigouts/7/on
get_cmd: boolean /%s/sigouts/7/on

[Channel 8 - Bypass DAC to port]
label: Bypass DAC to port
datatype: BOOLEAN
def_value: False
group: Output and AWG 8
section: Outputs
tooltip: Connect DAC to connector, bypassing amplifier and anti-aliasing filter. Gives highest bandwidth and lowest broadband noise, fixes range to 800 mV. Known as 'Direct output.'
set_cmd: other /%s/sigouts/7/direct
get_cmd: boolean /%s/sigouts/7/direct

[Channel 8 - Filter]
label: Filter
datatype: BOOLEAN
tooltip: Enables the analogue output filter.
def_value: False
state_quant: Channel 8 - Bypass DAC to port
state_value_1: False
group: Output and AWG 8
section: Outputs
set_cmd: boolean /%s/sigouts/7/filter
get_cmd: boolean /%s/sigouts/7/filter

[Channel 8 - Range]
label: Range
datatype: COMBO
combo_def_1: +/- 5 V
combo_def_2: +/- 4 V
combo_def_3: +/- 3 V
combo_def_4: +/- 2 V
combo_def_5: +/- 1 V
combo_def_6: +/- 800 mV
combo_def_7: +/- 600 mV
combo_def_8: +/- 400 mV
combo_def_9: +/- 200 mV
cmd_def_1: 5.0
cmd_def_2: 4.0
cmd_def_3: 3.0
cmd_def_4: 2.0
cmd_def_5: 1.0
cmd_def_6: 0.8
cmd_def_7: 0.6
cmd_def_8: 0.4
cmd_def_9: 0.2
def_value: +/- 1 V
state_quant: Channel 8 - Bypass DAC to port
state_value_1: False
group: Output and AWG 8
section: Outputs
set_cmd: other /%s/sigouts/7/range
get_cmd: other /%s/sigouts/7/range
# Remember that Range does not return a nice, rounded number.

[Channel 8 - Offset]
label: Offset
datatype: DOUBLE
unit: V
def_value: 0.0
high_lim: 3.400
low_lim: -3.400
group: Output and AWG 8
section: Outputs
set_cmd: double /%s/sigouts/7/offset
get_cmd: double /%s/sigouts/7/offset

[Channel 8 - Delay]
label: Delay
datatype: DOUBLE
unit: s
def_value: 0.0
high_lim: 26.25e-9
low_lim: 0.0
group: Output and AWG 8
section: Outputs
set_cmd: double /%s/sigouts/7/delay
get_cmd: double /%s/sigouts/7/delay

[Channel 8 AWG - Amplitude scaling]
label: Amplitude scaling
datatype: DOUBLE
def_value: 1
group: Output and AWG 8
section: Outputs
low_lim: -1.0
high_lim: 1.0
set_cmd: double /%s/awgs/3/outputs/1/amplitude
get_cmd: double /%s/awgs/3/outputs/1/amplitude

[Channel 8 AWG - Modulation]
label: Modulation
datatype: COMBO
combo_def_1: Off
combo_def_2: Sine 7
combo_def_3: Sine 8
combo_def_4: Advanced
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
cmd_def_4: 5
def_value: Off
group: Output and AWG 8
section: Outputs
set_cmd: int /%s/awgs/3/outputs/1/modulation/mode
get_cmd: int /%s/awgs/3/outputs/1/modulation/mode

[Channel 8 AWG - Hold last value]
label: Hold last value
datatype: BOOLEAN
def_value: False
group: Output and AWG 8
section: Outputs
tooltip: Hold the last played sample constant on the output after finishing playback. Waveforms will be padded if necessary to a multiple of 16.
set_cmd: boolean /%s/awgs/3/outputs/1/hold
get_cmd: boolean /%s/awgs/3/outputs/1/hold


#######################################################################
### Waveforms #########################################################
#######################################################################

[Channel 1 - Waveform]
datatype: VECTOR
permission: WRITE
unit: V
x_name: Time
x_unit: s
group: Waveforms
section: Waveforms
show_in_measurement_dlg: True

[Channel 2 - Waveform]
datatype: VECTOR
permission: WRITE
unit: V
x_name: Time
x_unit: s
group: Waveforms
section: Waveforms
show_in_measurement_dlg: True

[Channel 3 - Waveform]
datatype: VECTOR
permission: WRITE
unit: V
x_name: Time
x_unit: s
group: Waveforms
section: Waveforms
show_in_measurement_dlg: True

[Channel 4 - Waveform]
datatype: VECTOR
permission: WRITE
unit: V
x_name: Time
x_unit: s
group: Waveforms
section: Waveforms
show_in_measurement_dlg: True

[Channel 5 - Waveform]
datatype: VECTOR
permission: WRITE
unit: V
x_name: Time
x_unit: s
group: Waveforms
section: Waveforms
show_in_measurement_dlg: True

[Channel 6 - Waveform]
datatype: VECTOR
permission: WRITE
unit: V
x_name: Time
x_unit: s
group: Waveforms
section: Waveforms
show_in_measurement_dlg: True

[Channel 7 - Waveform]
datatype: VECTOR
permission: WRITE
unit: V
x_name: Time
x_unit: s
group: Waveforms
section: Waveforms
show_in_measurement_dlg: True

[Channel 8 - Waveform]
datatype: VECTOR
permission: WRITE
unit: V
x_name: Time
x_unit: s
group: Waveforms
section: Waveforms
show_in_measurement_dlg: True

[Waveform primitive 1]
datatype: VECTOR
permission: WRITE
unit: V
x_name: Time
x_unit: s
group: Primitives
section: Waveforms
show_in_measurement_dlg: True

[Waveform primitive 2]
datatype: VECTOR
permission: WRITE
unit: V
x_name: Time
x_unit: s
group: Primitives
section: Waveforms
show_in_measurement_dlg: False

[Waveform primitive 3]
datatype: VECTOR
permission: WRITE
unit: V
x_name: Time
x_unit: s
group: Primitives
section: Waveforms
show_in_measurement_dlg: False

[Waveform primitive 4]
datatype: VECTOR
permission: WRITE
unit: V
x_name: Time
x_unit: s
group: Primitives
section: Waveforms
show_in_measurement_dlg: False

[Waveform primitive 5]
datatype: VECTOR
permission: WRITE
unit: V
x_name: Time
x_unit: s
group: Primitives
section: Waveforms
show_in_measurement_dlg: False

[Waveform primitive 6]
datatype: VECTOR
permission: WRITE
unit: V
x_name: Time
x_unit: s
group: Primitives
section: Waveforms
show_in_measurement_dlg: False

[Waveform primitive 7]
datatype: VECTOR
permission: WRITE
unit: V
x_name: Time
x_unit: s
group: Primitives
section: Waveforms
show_in_measurement_dlg: False

[Waveform primitive 8]
datatype: VECTOR
permission: WRITE
unit: V
x_name: Time
x_unit: s
group: Primitives
section: Waveforms
show_in_measurement_dlg: False

[Waveform primitive 9]
datatype: VECTOR
permission: WRITE
unit: V
x_name: Time
x_unit: s
group: Primitives
section: Waveforms
show_in_measurement_dlg: False

[Waveform primitive 10]
datatype: VECTOR
permission: WRITE
unit: V
x_name: Time
x_unit: s
group: Primitives
section: Waveforms
show_in_measurement_dlg: False

[Waveform primitive 11]
datatype: VECTOR
permission: WRITE
unit: V
x_name: Time
x_unit: s
group: Primitives
section: Waveforms
show_in_measurement_dlg: False

[Waveform primitive 12]
datatype: VECTOR
permission: WRITE
unit: V
x_name: Time
x_unit: s
group: Primitives
section: Waveforms
show_in_measurement_dlg: False

[Waveform primitive 13]
datatype: VECTOR
permission: WRITE
unit: V
x_name: Time
x_unit: s
group: Primitives
section: Waveforms
show_in_measurement_dlg: False

[Waveform primitive 14]
datatype: VECTOR
permission: WRITE
unit: V
x_name: Time
x_unit: s
group: Primitives
section: Waveforms
show_in_measurement_dlg: False

[Waveform primitive 15]
datatype: VECTOR
permission: WRITE
unit: V
x_name: Time
x_unit: s
group: Primitives
section: Waveforms
show_in_measurement_dlg: False

[Waveform primitive 16]
datatype: VECTOR
permission: WRITE
unit: V
x_name: Time
x_unit: s
group: Primitives
section: Waveforms
show_in_measurement_dlg: True

[Waveform 1 sequence blueprint]
datatype: VECTOR
permission: WRITE
unit: V
group: Waveforms
section: Waveforms
show_in_measurement_dlg: True

[Waveform 2 sequence blueprint]
datatype: VECTOR
permission: WRITE
unit: V
group: Waveforms
section: Waveforms
show_in_measurement_dlg: False

[Waveform 3 sequence blueprint]
datatype: VECTOR
permission: WRITE
unit: V
group: Waveforms
section: Waveforms
show_in_measurement_dlg: False

[Waveform 4 sequence blueprint]
datatype: VECTOR
permission: WRITE
unit: V
group: Waveforms
section: Waveforms
show_in_measurement_dlg: False

[Waveform 5 sequence blueprint]
datatype: VECTOR
permission: WRITE
unit: V
group: Waveforms
section: Waveforms
show_in_measurement_dlg: False

[Waveform 6 sequence blueprint]
datatype: VECTOR
permission: WRITE
unit: V
group: Waveforms
section: Waveforms
show_in_measurement_dlg: False

[Waveform 7 sequence blueprint]
datatype: VECTOR
permission: WRITE
unit: V
group: Waveforms
section: Waveforms
show_in_measurement_dlg: False

[Waveform 8 sequence blueprint]
datatype: VECTOR
permission: WRITE
unit: V
group: Waveforms
section: Waveforms
show_in_measurement_dlg: False

[Waveform 9 sequence blueprint]
datatype: VECTOR
permission: WRITE
unit: V
group: Waveforms
section: Waveforms
show_in_measurement_dlg: False

[Waveform 10 sequence blueprint]
datatype: VECTOR
permission: WRITE
unit: V
group: Waveforms
section: Waveforms
show_in_measurement_dlg: False

[Waveform 11 sequence blueprint]
datatype: VECTOR
permission: WRITE
unit: V
group: Waveforms
section: Waveforms
show_in_measurement_dlg: False

[Waveform 12 sequence blueprint]
datatype: VECTOR
permission: WRITE
unit: V
group: Waveforms
section: Waveforms
show_in_measurement_dlg: False

[Waveform 13 sequence blueprint]
datatype: VECTOR
permission: WRITE
unit: V
group: Waveforms
section: Waveforms
show_in_measurement_dlg: False

[Waveform 14 sequence blueprint]
datatype: VECTOR
permission: WRITE
unit: V
group: Waveforms
section: Waveforms
show_in_measurement_dlg: False

[Waveform 15 sequence blueprint]
datatype: VECTOR
permission: WRITE
unit: V
group: Waveforms
section: Waveforms
show_in_measurement_dlg: False

[Waveform 16 sequence blueprint]
datatype: VECTOR
permission: WRITE
unit: V
group: Waveforms
section: Waveforms
show_in_measurement_dlg: True


#######################################################################
### Other functionality ###############################################
#######################################################################


[Signal LEDs on startup]
datatype: BOOLEAN
def_value: False
tooltip: Blinks all LEDs red ('Identify') when connected to the instrument.
group: Identify
section: Other

[Signal LEDs on close]
datatype: BOOLEAN
def_value: False
tooltip: Blinks all LEDs red ('Identify') when disconnecting from the instrument.
group: Identify
section: Other

[Disable outputs on close]
datatype: BOOLEAN
def_value: False
tooltip: Turns off all signal outputs when closing the instrument connection
group: Signal outputs
section: Other


###############################################################################
### Installed options #########################################################
###############################################################################

[CNT installed]
label: Pulse counter (CNT)
datatype: BOOLEAN
group: Automatically detected installed options
def_value: False
section: Other
tooltip: This value is acquired at instrument startup. Only sadness stems from changing it here manually.

[MF installed]
label: Multi-frequency (MF)
datatype: BOOLEAN
group: Automatically detected installed options
def_value: False
section: Other
tooltip: This value is acquired at instrument startup. Only sadness stems from changing it here manually.

[ME installed]
label: Memory extension (ME)
datatype: BOOLEAN
group: Automatically detected installed options
def_value: False
section: Other
tooltip: This value is acquired at instrument startup. Only sadness stems from changing it here manually.

[SKW installed]
label: Output skew control (SKW)
datatype: BOOLEAN
group: Automatically detected installed options
def_value: False
section: Other
tooltip: This value is acquired at instrument startup. Only sadness stems from changing it here manually.

[PC installed]
label: Real-time precompensation (PC)
datatype: BOOLEAN
group: Automatically detected installed options
def_value: False
section: Other
tooltip: This value is acquired at instrument startup. Only sadness stems from changing it here manually.

; Very large TODO: Limit the amount of outputs to the same number as n_ch
; reported by the driver.

; Very large TODO: Using MF above, limit the correct oscillators.
; Which oscillators that are supposed to generate errors is not
; verifiable until this driver is tried out on an HDAWG4.


; [Output channel 1 detected]
; datatype: BOOLEAN
; group: Automatically detected wave output channels
; def_value: True
; section: Other
; tooltip: This value is acquired at instrument startup. Only sadness stems from changing it here manually.

; [Output channel 2 detected]
; datatype: BOOLEAN
; group: Automatically detected wave output channels
; def_value: True
; section: Other
; tooltip: This value is acquired at instrument startup. Only sadness stems from changing it here manually.

; [Output channel 3 detected]
; datatype: BOOLEAN
; group: Automatically detected wave output channels
; def_value: True
; section: Other
; tooltip: This value is acquired at instrument startup. Only sadness stems from changing it here manually.

; [Output channel 4 detected]
; datatype: BOOLEAN
; group: Automatically detected wave output channels
; def_value: True
; section: Other
; tooltip: This value is acquired at instrument startup. Only sadness stems from changing it here manually.

; [Output channel 5 detected]
; datatype: BOOLEAN
; group: Automatically detected wave output channels
; def_value: True
; section: Other
; tooltip: This value is acquired at instrument startup. Only sadness stems from changing it here manually.

; [Output channel 6 detected]
; datatype: BOOLEAN
; group: Automatically detected wave output channels
; def_value: True
; section: Other
; tooltip: This value is acquired at instrument startup. Only sadness stems from changing it here manually.

; [Output channel 7 detected]
; datatype: BOOLEAN
; group: Automatically detected wave output channels
; def_value: True
; section: Other
; tooltip: This value is acquired at instrument startup. Only sadness stems from changing it here manually.

; [Output channel 8 detected]
; datatype: BOOLEAN
; group: Automatically detected wave output channels
; def_value: True
; section: Other
; tooltip: This value is acquired at instrument startup. Only sadness stems from changing it here manually.

[Command line box]
datatype: STRING
group: ZI API command parser
section: Other
def_value: double /%s/example/0/command/13, 313.0
set_cmd: string /%s/labber/
get_cmd: string /%s/labber/
tooltip: Force the following command onto the ZI API. Assign your datatype (int, double, boolean = int 1 or int 0), type the ZI API command where %s takes the place of the device serial, add the value to be sent after a comma and a space.

#[Path to LabOne folder]
#datatype: STRING
#group: Automatic driver reconnect
#section: Other
#tooltip: Path to the local LabOne installation. Enables automatic restart on hardware error-induced connection drops.