# Instrument driver configuration file.

[General settings]

# The name is shown in all the configuration windows
name: Zurich Instruments UHFQA

# The version string should be updated whenever changes are made to this config file
version: 0.3.5

# Name of folder containing the code defining a custom driver. Do not define this item
# or leave it blank for any standard driver based on the built-in VISA interface.
driver_path: Zurich Instruments UHFQA


[Model and options]
# The option section allow instruments with different options to use the same driver

# Check instrument model id at startup (True or False). Default is False
check_model: False

# List of models supported by this driver
model_str_1: UHFQA 600 MHz 1.8 GSa/s

check_option: true
option_str_1: UHF-Digitizer


# General VISA settings for the instrument.
[VISA settings]

# Enable or disable communication over the VISA protocol (True or False)
# If False, the driver will not perform any operations (unless there is a custom driver).
use_visa: False

# Define quantities in sections. The section name should be the same as the "name" value
# The following keywords are allowed:
#   name:          Quantity name
#   unit:          Quantity unit
#   enabled:	   Determines wether the control is enabled from start.  Default is True
#   datatype:      The data type should be one of DOUBLE, BOOLEAN, COMBO or STRING
#   def_value:     Default value
#   low_lim:       Lowest allowable value.  Defaults to -INF
#   high_lim:      Highest allowable values.  Defaults to +INF
#   combo_def_1:   First option in a pull-down combo box. Only used when datatype=COMBO
#   combo_def_2:   Second option in a pull-down combo box. Only used when datatype=COMBO
#   ...
#   combo_def_n:   nth option in a pull-down combo box. Only used when datatype=COMBO
#   group:         Name of the group where the control belongs.
#   state_quant:   Quantity that determines this control's visibility
#   state_value_1: Value of "state_quant" for which the control is visible
#   state_value_2: Value of "state_quant" for which the control is visible
#   ...
#   state_value_n: Value of "state_quant" for which the control is visible
#   permission:    Sets read/writability, options are BOTH, READ, WRITE or NONE. Default is BOTH
#   set_cmd:       Command used to send data to the instrument. Put <*> where the value should appear.
#   get_cmd:       Command used to get the data from the instrument. Default is set_cmd?
#   sweep_cmd:     Command used to sweep data. Use <sr> for sweep rate, <st> for sweep time, and <*> for the value.
#   stop_cmd:      Command used to stop a sweep




#######################################################################
### Signal Inputs #####################################################
#######################################################################


; TODO setting a value close to for instance 1 sets the rangesigin value to 1.0,
; although the user-set value is reported.
; TODO the rangesigin value does not update in accordance with Auto Range Input X

[RangeSigIn1]
label: Input amplifier range
datatype: DOUBLE
group: Signal Input 1
section: Signal inputs
get_cmd: /%s/sigins/0/range
tooltip: This value modifies the gain of the input amplifier. The range should exceed the input signal roughly by a factor of 2, including DC offset.

[RangeSigIn2]
label: Input amplifier range
datatype: DOUBLE
group: Signal Input 2
section: Signal inputs
get_cmd: /%s/sigins/1/range
tooltip: This value modifies the gain of the input amplifier. The range should exceed the input signal roughly by a factor of 2, including DC offset.

; TODO when an automatic threshold function is finished, the double-bar
; indicating the input level voltage should update accordingly

[Auto Range Input 1]
label: Adjust range automatically
datatype: BUTTON
group: Signal Input 1
section: Signal inputs
get_cmd: /%s/sigins/0/autorange

[Auto Range Input 2]
label: Adjust range automatically
datatype: BUTTON
group: Signal Input 2
section: Signal inputs
get_cmd: /%s/sigins/1/autorange

[ScalingSigIn1]
label: Scale input
datatype: DOUBLE
group: Signal Input 1
section: Signal inputs
get_cmd: /%s/sigins/0/scaling

[ScalingSigIn2]
label: Scale input
datatype: DOUBLE
group: Signal Input 2
section: Signal inputs
get_cmd: /%s/sigins/1/scaling

[DiffSigIn1]
label: Input differential mode
datatype: COMBO
combo_def_1: Off
combo_def_2: Inverted
combo_def_3: Input 1 - Input 2
combo_def_4: Input 2 - Input 1
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
cmd_def_4: 3
group: Signal Input 1
section: Signal inputs
get_cmd: /%s/sigins/0/diff

[DiffSigIn2]
label: Input differential mode
datatype: COMBO
combo_def_1: Off
combo_def_2: Inverted
combo_def_3: Input 2 - Input 1
combo_def_4: Input 1 - Input 2
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
cmd_def_4: 3
group: Signal Input 2
section: Signal inputs
get_cmd: /%s/sigins/1/diff

[ACSigIn1]
label: AC couple
datatype: BOOLEAN
group: Signal Input 1
section: Signal inputs
get_cmd: /%s/sigins/0/ac

[ACSigIn2]
label: AC couple
datatype: BOOLEAN
group: Signal Input 2
section: Signal inputs
get_cmd: /%s/sigins/1/ac

[FiftyOhmSigIn1]
label: 50 ohm ( 1 Megaohm when disabled )
datatype: BOOLEAN
group: Signal Input 1
section: Signal inputs
get_cmd: /%s/sigins/0/imp50

[FiftyOhmSigIn2]
label: 50 ohm ( 1 Megaohm when disabled )
datatype: BOOLEAN
group: Signal Input 2
section: Signal inputs
get_cmd: /%s/sigins/1/imp50


#######################################################################
### Signal Outputs ####################################################
#######################################################################

[SigOut1On]
label: Enable signal output 1
datatype: BOOLEAN
group: Signal Output 1
section: Signal outputs
get_cmd: /%s/sigouts/0/on

[SigOut2On]
label: Enable signal output 2
datatype: BOOLEAN
group: Signal Output 2
section: Signal outputs
get_cmd: /%s/sigouts/1/on

[ImpedanceFifty1On]
label: 50 ohm load impedance
datatype: BOOLEAN
group: Signal Output 1
section: Signal outputs
get_cmd: /%s/sigouts/0/imp50

[ImpedanceFifty2On]
label: 50 ohm load impedance
datatype: BOOLEAN
group: Signal Output 2
section: Signal outputs
get_cmd: /%s/sigouts/1/imp50

[RangeSigOut1]
label: Output voltage range
datatype: COMBO
combo_def_1: 750 mV (1.5 V at HiZ)
combo_def_2: 75 mV (150 mV at HiZ)
cmd_def_1: 0.75
cmd_def_2: 0.075
group: Signal Output 1
section: Signal outputs
get_cmd: /%s/sigouts/0/range
tooltip: This value sets the maximum output voltage that is generated by the corresponding signal output port. This includes the potential multiple signal amplitudes and offsets summed up. Keep this low to optimise signal quality.

[RangeSigOut2]
label: Output voltage range
datatype: COMBO
combo_def_1: 750 mV (1.5 V at HiZ)
combo_def_2: 75 mV (150 mV at HiZ)
cmd_def_1: 0.75
cmd_def_2: 0.075
group: Signal Output 2
section: Signal outputs
get_cmd: /%s/sigouts/1/range
tooltip: This value sets the maximum output voltage that is generated by the corresponding signal output port. This includes the potential multiple signal amplitudes and offsets summed up. Keep this low to optimise signal quality.

; TODO when an automatic threshold function is finished, the double-bar
; indicating the input level voltage should update accordingly

; TODO SEE ABOVE [Auto Range Input 1]
; TODO SEE ABOVE [Auto Range Input 2]

[OffsetSigOut1]
label: DC offset
datatype: DOUBLE
unit: V
group: Signal Output 1
section: Signal outputs
get_cmd: /%s/sigouts/0/offset

[OffsetSigOut2]
label: DC offset
datatype: DOUBLE
unit: V
group: Signal Output 2
section: Signal outputs
get_cmd: /%s/sigouts/1/offset

; TODO [AmplitudeSigOut1]
; TODO [AmplitudeSigOut2]

# THE FUNCTION RelativePhaseOffset IS DEPRECATED
#[RelativePhaseOffset]
#label: Phase offset of ch. 2 relative ch. 1
#datatype: DOUBLE
#unit: degrees
#group: Relative output phases
#section: Signal outputs
#get_cmd: setRelativePhaseOffset

#######################################################################
### Oscillators #######################################################
#######################################################################

; TODO are there even other options than Manual?

[OscillatorMode]
label: Oscillator mode
datatype: COMBO
combo_def_1: Manual
cmd_def_1: Manual
group: Oscillators
section: Oscillator control
; get_cmd:

[Oscillator1]
label: Frequency
datatype: DOUBLE
unit: Hz
group: Oscillators
section: Oscillator control
get_cmd: /%s/oscs/0/freq
low_lim: 0.0
high_lim: 900000000.0

[Oscillator2]
label: Frequency
datatype: DOUBLE
unit: Hz
group: Oscillators
section: Oscillator control
get_cmd: /%s/oscs/1/freq
low_lim: 0.0
high_lim: 900000000.0


#######################################################################
### AWG Control #######################################################
#######################################################################

; TODO the AWG cannot run unless there is some kind of program loaded.
; The box will of course tick but the AWG will not enable.

[EnableAWG]
label: Run AWG
datatype: BOOLEAN
group: Execution
section: AWG Control
get_cmd: awgModule/awg/enable

; TODO if the seqc-is not looping, and runs to its program end, the AWG will
; disable its output although the tickbox stays ticked.

[EnableRerunAWG]
label: Enable AWG rerun
datatype: BOOLEAN
group: Execution
section: AWG Control
get_cmd: /%s/awgs/0/single
;def_value: 0

; TODO can there really be more than 1 AWG? In that case there is a lot to fix.

[OutputSamplingRateAWG]
label: AWG default playback rate
datatype: COMBO
combo_def_1: 1.80 GSa/s
combo_def_2: 900 MSa/s
combo_def_3: 450 MSa/s
combo_def_4: 225 MSa/s
combo_def_5: 112.5 MSa/s
combo_def_6: 56.25 MSa/s
combo_def_7: 28.13 MSa/s (28.12 reported)
combo_def_8: 14.06 MSa/s
combo_def_9: 7.03 MSa/s
combo_def_10: 3.52 MSa/s (3.51 reported)
combo_def_11: 1.76 MSa/s (1.75 reported)
combo_def_12: 878.9 kSa/s
combo_def_13: 439.45 kSa/s
combo_def_14: 219.73 kSa/s (219.72 reported)
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
cmd_def_4: 3
cmd_def_5: 4
cmd_def_6: 5
cmd_def_7: 6
cmd_def_8: 7
cmd_def_9: 8
cmd_def_10: 9
cmd_def_11: 10
cmd_def_12: 11
cmd_def_13: 12
cmd_def_14: 13
group: Execution
section: AWG Control
get_cmd: /%s/awgs/0/time


; TODO can you have more than 2 outputs?

[ModeOutput1AWG]
label: AWG mode
datatype: COMBO
combo_def_1: Plain (AWG straight to port)
combo_def_2: Modulation
combo_def_3: Advanced
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
group: Signal Output Port 1
section: AWG Control
get_cmd: /%s/awgs/0/outputs/0/mode

[ModeOutput2AWG]
label: AWG mode
datatype: COMBO
combo_def_1: Plain (AWG straight to port)
combo_def_2: Modulation
combo_def_3: Advanced
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
group: Signal Output Port 2
section: AWG Control
get_cmd: /%s/awgs/0/outputs/1/mode

[AmplitudeOutput1AWG]
label: Amplitude
datatype: DOUBLE
unit: Rel. to full scale
group: Signal Output Port 1
section: AWG Control
get_cmd: /%s/awgs/0/outputs/0/amplitude
low_lim: 0.0
high_lim: 1.0

[AmplitudeOutput2AWG]
label: Amplitude
datatype: DOUBLE
unit: Rel. to full scale
group: Signal Output Port 2
section: AWG Control
get_cmd: /%s/awgs/0/outputs/1/amplitude
low_lim: 0.0
high_lim: 1.0


; TODO how many user registers are relevant to add?

[UserRegister1]
label: User register 1
datatype: DOUBLE
group: User-defined AWG registers
section: AWG Control
get_cmd: /%s/awgs/0/userregs/0

[UserRegister2]
label: User register 2
datatype: DOUBLE
group: User-defined AWG registers
section: AWG Control
get_cmd: /%s/awgs/0/userregs/1

[UserRegister3]
label: User register 3
datatype: DOUBLE
group: User-defined AWG registers
section: AWG Control
get_cmd: /%s/awgs/0/userregs/2

[UserRegister4]
label: User register 4
datatype: DOUBLE
group: User-defined AWG registers
section: AWG Control
get_cmd: /%s/awgs/0/userregs/3

[UserRegister5]
label: User register 5
datatype: DOUBLE
group: User-defined AWG registers
section: AWG Control
get_cmd: /%s/awgs/0/userregs/4

[UserRegister6]
label: User register 6
datatype: DOUBLE
group: User-defined AWG registers
section: AWG Control
get_cmd: /%s/awgs/0/userregs/5

[UserRegister7]
label: User register 7
datatype: DOUBLE
group: User-defined AWG registers
section: AWG Control
get_cmd: /%s/awgs/0/userregs/6

[UserRegister8]
label: User register 8
datatype: DOUBLE
group: User-defined AWG registers
section: AWG Control
get_cmd: /%s/awgs/0/userregs/7

[UserRegister9]
label: User register 9
datatype: DOUBLE
group: User-defined AWG registers
section: AWG Control
get_cmd: /%s/awgs/0/userregs/8

[UserRegister10]
label: User register 10
datatype: DOUBLE
group: User-defined AWG registers
section: AWG Control
get_cmd: /%s/awgs/0/userregs/9

[UserRegister11]
label: User register 11
datatype: DOUBLE
group: User-defined AWG registers
section: AWG Control
get_cmd: /%s/awgs/0/userregs/10

[UserRegister12]
label: User register 12
datatype: DOUBLE
group: User-defined AWG registers
section: AWG Control
get_cmd: /%s/awgs/0/userregs/11

[UserRegister13]
label: User register 13
datatype: DOUBLE
group: User-defined AWG registers
section: AWG Control
get_cmd: /%s/awgs/0/userregs/12

[UserRegister14]
label: User register 14
datatype: DOUBLE
group: User-defined AWG registers
section: AWG Control
get_cmd: /%s/awgs/0/userregs/13

[UserRegister15]
label: User register 15
datatype: DOUBLE
group: User-defined AWG registers
section: AWG Control
get_cmd: /%s/awgs/0/userregs/14

[UserRegister16]
label: User register 16
datatype: DOUBLE
group: User-defined AWG registers
section: AWG Control
get_cmd: /%s/awgs/0/userregs/15



[UseInternalVectorPlaybackRate]
label: Use software-defined AWG playback rate
datatype: BOOLEAN
group: Execution
section: AWG Trigger
get_cmd: useInternalPlayback

; TODO no high_lim
[LoadedVectorPlaybackRate]
label: Loaded vector playback rate
datatype: DOUBLE
unit: s
group: Execution
section: AWG Trigger
get_cmd: setEditorPlayback
low_lim: 0.0
state_quant: UseInternalVectorPlaybackRate
state_value_1: 1
tooltip: Set waveform playback repetition rate for the loaded vector using internally defined wait- and padding cycles. Set to 0 in order to disable the playback rate.

; TODO how does the amount of analogue and/or digital triggers relate
; to the amount of installed AWGs? (is that a thing?) or channels?

[TriggerSourceAnalogue1AWG]
label: Trigger source
datatype: COMBO
combo_def_1: Aux in 1 sample, Channel 1
combo_def_2: Aux in 1 sample, Channel 2
combo_def_3: Aux Output 1
combo_def_4: Aux Output 2
combo_def_5: Aux Output 3
combo_def_6: Aux Output 4
combo_def_7: AWG Marker 1
combo_def_8: AWG Marker 2
combo_def_9: AWG Marker 3
combo_def_10: AWG Marker 4
combo_def_11: AWG Trigger 1
combo_def_12: AWG Trigger 2
combo_def_13: AWG Trigger 3
combo_def_14: AWG Trigger 4
combo_def_15: Signal Input 1
combo_def_16: Signal Input 2
combo_def_17: Trigger Input 1
combo_def_18: Trigger Input 2
cmd_def_1: 8
cmd_def_2: 9
cmd_def_3: 4
cmd_def_4: 5
cmd_def_5: 6
cmd_def_6: 7
cmd_def_7: 176
cmd_def_8: 177
cmd_def_9: 178
cmd_def_10: 179
cmd_def_11: 192
cmd_def_12: 193
cmd_def_13: 194
cmd_def_14: 195
cmd_def_15: 0
cmd_def_16: 1
cmd_def_17: 2
cmd_def_18: 3
group: Analogue Trigger 1
section: AWG Trigger
get_cmd: /%s/awgs/0/triggers/0/channel
state_quant: UseInternalVectorPlaybackRate
state_value_1: 0

[TriggerSourceAnalogue2AWG]
label: Trigger source
datatype: COMBO
combo_def_1: Aux in 1 sample, Channel 1
combo_def_2: Aux in 1 sample, Channel 2
combo_def_3: Aux Output 1
combo_def_4: Aux Output 2
combo_def_5: Aux Output 3
combo_def_6: Aux Output 4
combo_def_7: AWG Marker 1
combo_def_8: AWG Marker 2
combo_def_9: AWG Marker 3
combo_def_10: AWG Marker 4
combo_def_11: AWG Trigger 1
combo_def_12: AWG Trigger 2
combo_def_13: AWG Trigger 3
combo_def_14: AWG Trigger 4
combo_def_15: Signal Input 1
combo_def_16: Signal Input 2
combo_def_17: Trigger Input 1
combo_def_18: Trigger Input 2
cmd_def_1: 8
cmd_def_2: 9
cmd_def_3: 4
cmd_def_4: 5
cmd_def_5: 6
cmd_def_6: 7
cmd_def_7: 176
cmd_def_8: 177
cmd_def_9: 178
cmd_def_10: 179
cmd_def_11: 192
cmd_def_12: 193
cmd_def_13: 194
cmd_def_14: 195
cmd_def_15: 0
cmd_def_16: 1
cmd_def_17: 2
cmd_def_18: 3
group: Analogue Trigger 2
section: AWG Trigger
get_cmd: /%s/awgs/0/triggers/1/channel
state_quant: UseInternalVectorPlaybackRate
state_value_1: 0

[TriggerSourceDigital1AWG]
label: Trigger source
datatype: COMBO
combo_def_1: Trigger In 1
combo_def_2: Trigger In 2
combo_def_3: Trigger In 3
combo_def_4: Trigger In 4
combo_def_5: Trigger Out 1
combo_def_6: Trigger Out 2
combo_def_7: Trigger Out 3
combo_def_8: Trigger Out 4
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
cmd_def_4: 3
cmd_def_5: 4
cmd_def_6: 5
cmd_def_7: 6
cmd_def_8: 7
group: Digital Trigger 1
section: AWG Trigger
get_cmd: /%s/awgs/0/auxtriggers/0/channel
state_quant: UseInternalVectorPlaybackRate
state_value_1: 0

[TriggerSourceDigital2AWG]
label: Trigger source
datatype: COMBO
combo_def_1: Trigger In 1
combo_def_2: Trigger In 2
combo_def_3: Trigger In 3
combo_def_4: Trigger In 4
combo_def_5: Trigger Out 1
combo_def_6: Trigger Out 2
combo_def_7: Trigger Out 3
combo_def_8: Trigger Out 4
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
cmd_def_4: 3
cmd_def_5: 4
cmd_def_6: 5
cmd_def_7: 6
cmd_def_8: 7
group: Digital Trigger 2
section: AWG Trigger
get_cmd: /%s/awgs/0/auxtriggers/1/channel
state_quant: UseInternalVectorPlaybackRate
state_value_1: 0

[SlopeDigital1AWG]
label: Trigger slope
datatype: COMBO
combo_def_1: Rise
combo_def_2: Fall
combo_def_3: Both
combo_def_4: Level
cmd_def_1: 1
cmd_def_2: 2
cmd_def_3: 3
cmd_def_4: 0
group: Digital Trigger 1
section: AWG Trigger
get_cmd: /%s/awgs/0/auxtriggers/0/slope
state_quant: UseInternalVectorPlaybackRate
state_value_1: 0

[SlopeDigital2AWG]
label: Trigger slope
datatype: COMBO
combo_def_1: Rise
combo_def_2: Fall
combo_def_3: Both
combo_def_4: Level
cmd_def_1: 1
cmd_def_2: 2
cmd_def_3: 3
cmd_def_4: 0
group: Digital Trigger 2
section: AWG Trigger
get_cmd: /%s/awgs/0/auxtriggers/1/slope
state_quant: UseInternalVectorPlaybackRate
state_value_1: 0


#######################################################################
### AWG editor ########################################################
#######################################################################

; TODO there should be a default program, the one referenced as 'Default' in
; the driver file.

[Compile and upload]
label: Upload program to the AWG
datatype: BUTTON
group: Execution
section: AWG Editor

; TODO Simple signal generator functionality to be implemented
; TODO get functionality for the signal generator is to be implemented,
; for instance by setting several values as selfs and
; returning them when prompted.

; TODO some sort of indicator at AWG rerun showing that it is doing nothing
; because Seamless loop is activated.

[SimpleSigGenLoop]
label: Seamless loop
datatype: BOOLEAN
group: Simple signal generator
section: AWG Editor
get_cmd: loop
tooltip: This option encapsulates the waveform playback in a seamless while-loop. 'AWG rerun' will then effectively do nothing.

[SimpleSigGenWaveformType]
label: Waveform
datatype: COMBO
combo_def_1: Sine
combo_def_2: Square TODO
combo_def_3: Ramp TODO
;combo_def_4: Pulse TODO
;combo_def_5: Triangle TODO
;combo_def_6: Noise TODO
;combo_def_6: DC TODO
cmd_def_1: 1
cmd_def_2: 2
cmd_def_3: 3
;cmd_def_4: 4
;cmd_def_5: 5
;cmd_def_6: 6
group: Simple signal generator
section: AWG Editor
get_cmd: wave

[SimpleSigGenAwgPoints]
label: Points in the AWG waveform
datatype: DOUBLE
group: Simple signal generator
section: AWG Editor
get_cmd: awgPoints
low_lim: 0.0

[SimpleSigGenAmplitude]
label: Amplitude
datatype: DOUBLE
unit: Rel. to full scale
group: Simple signal generator
section: AWG Editor
get_cmd: amplitude
low_lim: 0.0
high_lim: 1.0


; [SimpleSigGenOffset]
; [SimpleSigGenPhase]
; [SimpleSigGenDutyCycle]
; [SimpleSigGenTrigger]

; TODO currently only fetches a pre-made program

[Insert into program]
label: Load Labber vector
datatype: BUTTON
group: Comma-separated values
section: AWG Editor

[LoadedVector1]
label: LoadedVector1
datatype: VECTOR
group: Comma-separated values
section: AWG Editor

[LoadedVector2]
label: LoadedVector2
datatype: VECTOR
group: Comma-separated values
section: AWG Editor

[Clear local AWG program]
label: Clear program
datatype: BUTTON
group: Reset
section: AWG Editor

#######################################################################
### Scope Control #####################################################
#######################################################################

[Acquire data using scope 1]
label: Run data acqusition
datatype: BUTTON
group: Execution
section: Scope 1 Control

;[Runscope2] TODO

[ScopedVector1Enabled]
label: Enable data acquisition of channel 1
datatype: BOOLEAN
group: Execution
section: Scope 1 Control

[ScopedVector2Enabled]
label: Enable data acquisition of channel 2
datatype: BOOLEAN
group: Execution
section: Scope 1 Control

[ScopedVector1]
label: ScopedVector1
datatype: VECTOR
group: Comma-separated values
section: Scope 1 Control
unit: V
x_name: Time
x_unit: s
show_in_measurement_dlg: True

[ScopedVector2]
label: ScopedVector2
datatype: VECTOR
group: Comma-separated values
section: Scope 1 Control
unit: V
x_name: Time
x_unit: s
show_in_measurement_dlg: True

[EnableScope1]
label: Enable oscilloscope
datatype: BOOLEAN
group: Execution
section: Scope 1 Control
get_cmd: /%s/scopes/0/enable

; TODO How many scopes there are depends on installed options

; [EnableScope2]
; label: Run oscilloscope
; datatype: BOOLEAN
; group: Execution
; section: Scope 2 Control
; get_cmd: /%s/scopes/1/enable


; TODO single shot scope is set to zero when the scope acquires data

[SingleShotScope1]
label: Arm single shot
datatype: BOOLEAN
group: Execution
section: Scope 1 Control
get_cmd: /%s/scopes/0/single

; [SingleShotScope2]
; label: Arm single shot
; datatype: BOOLEAN
; group: Execution
; section: Scope 2 Control
; get_cmd: /%s/scopes/0/single

; TODO If the trigger is enabled, and the scope is running OR is single shot armed,
; then Force should be klickable

[Force Scope 1]
label: Force single shot
datatype: BUTTON
group: Execution
section: Scope 1 Control
get_cmd: /%s/scopes/0/trigforce

; [ForceScope2]
; label: Force single shot
; datatype: BUTTON
; group: Execution
; section: Scope 2 Control
; get_cmd: /%s/scopes/0/trigforce

; TODO the amount of scopes may vary

[SamplingRateScope1]
label: Sampling rate
datatype: COMBO
combo_def_1: 1.80 GSa/s
combo_def_2: 900 MSa/s
combo_def_3: 450 MSa/s
combo_def_4: 225 MSa/s
combo_def_5: 113 MSa/s
combo_def_6: 56.3 MSa/s (56.2 reported)
combo_def_7: 28.1 MSa/s
combo_def_8: 14.0 MSa/s
combo_def_9: 7.03 MSa/s
combo_def_10: 3.52 MSa/s (3.50 reported)
combo_def_11: 1.76 MSa/s (1.75 reported)
combo_def_12: 879 kSa/s (880 reported)
combo_def_13: 439 kSa/s (440 reported)
combo_def_14: 220 kSa/s
combo_def_15: 110 kSa/s
combo_def_16: 54.9 kSa/s
combo_def_17: 27.5 kSa/s
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
cmd_def_4: 3
cmd_def_5: 4
cmd_def_6: 5
cmd_def_7: 6
cmd_def_8: 7
cmd_def_9: 8
cmd_def_10: 9
cmd_def_11: 10
cmd_def_12: 11
cmd_def_13: 12
cmd_def_14: 13
cmd_def_15: 14
cmd_def_16: 15
cmd_def_17: 16
group: Control
section: Scope 1 Control
get_cmd: /%s/scopes/0/time

; [SamplingRateScope2] TODO fix


; TODO there may be more scopes
; TODO sample length has two modes: points, and duration in (s)
; TODO UHF-DIG increases the highest allowed double quite a lot.

; TODO sampleLengthScope1 should be integer only

[SampleLengthScope1]
label: Sample length (powers of 2 are preferred)
datatype: DOUBLE
group: Control
section: Scope 1 Control
get_cmd: /%s/scopes/0/length

; [SampleAmountScope2]


; TODO the amount of channels depends on installed options

; TODO The AUX, SIGINPUT and TRIGINPUT options in Signal source for channel 1
; should have greyed out MIN and MAX fields

[SignalSourceChannel1Scope1]
label: Signal source for channel 1
datatype: COMBO
combo_def_1: Aux in 1 sample, Channel 1
combo_def_2: Aux in 1 sample, Channel 2
combo_def_3: Aux Output 1
combo_def_4: Aux Output 2
combo_def_5: Aux Output 3
combo_def_6: Aux Output 4
combo_def_7: AWG Marker 1
combo_def_8: AWG Marker 2
combo_def_9: AWG Marker 3
combo_def_10: AWG Marker 4
combo_def_11: AWG Trigger 1
combo_def_12: AWG Trigger 2
combo_def_13: AWG Trigger 3
combo_def_14: AWG Trigger 4
combo_def_15: Signal Input 1
combo_def_16: Signal Input 2
combo_def_17: Trigger Input 1
combo_def_18: Trigger Input 2
cmd_def_1: 8
cmd_def_2: 9
cmd_def_3: 4
cmd_def_4: 5
cmd_def_5: 6
cmd_def_6: 7
cmd_def_7: 176
cmd_def_8: 177
cmd_def_9: 178
cmd_def_10: 179
cmd_def_11: 192
cmd_def_12: 193
cmd_def_13: 194
cmd_def_14: 195
cmd_def_15: 0
cmd_def_16: 1
cmd_def_17: 2
cmd_def_18: 3
group: Control
section: Scope 1 Control
get_cmd: /%s/scopes/0/channels/0/inputselect

[SignalSourceChannel2Scope1]
label: Signal source for channel 2
datatype: COMBO
combo_def_1: Aux in 1 sample, Channel 1
combo_def_2: Aux in 1 sample, Channel 2
combo_def_3: Aux Output 1
combo_def_4: Aux Output 2
combo_def_5: Aux Output 3
combo_def_6: Aux Output 4
combo_def_7: AWG Marker 1
combo_def_8: AWG Marker 2
combo_def_9: AWG Marker 3
combo_def_10: AWG Marker 4
combo_def_11: AWG Trigger 1
combo_def_12: AWG Trigger 2
combo_def_13: AWG Trigger 3
combo_def_14: AWG Trigger 4
combo_def_15: Signal Input 1
combo_def_16: Signal Input 2
combo_def_17: Trigger Input 1
combo_def_18: Trigger Input 2
cmd_def_1: 8
cmd_def_2: 9
cmd_def_3: 4
cmd_def_4: 5
cmd_def_5: 6
cmd_def_6: 7
cmd_def_7: 176
cmd_def_8: 177
cmd_def_9: 178
cmd_def_10: 179
cmd_def_11: 192
cmd_def_12: 193
cmd_def_13: 194
cmd_def_14: 195
cmd_def_15: 0
cmd_def_16: 1
cmd_def_17: 2
cmd_def_18: 3
group: Control
section: Scope 1 Control
get_cmd: /%s/scopes/0/channels/1/inputselect

; [SignalSourceChannel1Scope2] TODO Channels and scopes may vary
; [SignalSourceChannel2Scope2] TODO Channels and scopes may vary

[RecordAmountToAverage]
label: Amount of records to average every run
datatype: DOUBLE
group: Control
section: Scope 1 Control
low_lim: 1
tooltip: Set the amount of records to be averaged upon every measurement. For instance, a value of 20 implies that 20 measurements will be averaged per measurement step.

[TriggerEnabledScope1]
label: Trigger enabled
datatype: BOOLEAN
group: Trigger
section: Scope 1 Trigger
get_cmd: /%s/scopes/0/trigenable

; [TriggerEnabledScope2] TODO scopes may vary

; TODO amount of scopes may vary
; TODO If setting AUX or 'Signal input' values (1-6,15-16), the unit changes to V

[TriggerSourceScope1]
label: Trigger source
datatype: COMBO
combo_def_1: Aux in 1 sample, Channel 1
combo_def_2: Aux in 1 sample, Channel 2
combo_def_3: Aux Output 1
combo_def_4: Aux Output 2
combo_def_5: Aux Output 3
combo_def_6: Aux Output 4
combo_def_7: AWG Marker 1
combo_def_8: AWG Marker 2
combo_def_9: AWG Marker 3
combo_def_10: AWG Marker 4
combo_def_11: AWG Trigger 1
combo_def_12: AWG Trigger 2
combo_def_13: AWG Trigger 3
combo_def_14: AWG Trigger 4
combo_def_15: Signal Input 1
combo_def_16: Signal Input 2
combo_def_17: Trigger Input 1
combo_def_18: Trigger Input 2
cmd_def_1: 8
cmd_def_2: 9
cmd_def_3: 4
cmd_def_4: 5
cmd_def_5: 6
cmd_def_6: 7
cmd_def_7: 176
cmd_def_8: 177
cmd_def_9: 178
cmd_def_10: 179
cmd_def_11: 192
cmd_def_12: 193
cmd_def_13: 194
cmd_def_14: 195
cmd_def_15: 0
cmd_def_16: 1
cmd_def_17: 2
cmd_def_18: 3
group: Trigger
section: Scope 1 Trigger
get_cmd: /%s/scopes/0/trigchannel

; [TriggerSourceScope2] TODO

; TODO there may be more scopes than 1
; TODO Changing the slope to None changes it back to Rise for some reason.

[TriggerFlankScope1]
label: Trigger slope
datatype: COMBO
combo_def_1: None
combo_def_2: Rising
combo_def_3: Falling
combo_def_4: Both
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
cmd_def_4: 3
group: Trigger
section: Scope 1 Trigger
get_cmd: /%s/scopes/0/trigslope

; [TriggerFlankScope2] TODO

; TODO there may be more scopes

[TriggerVoltageScope1]
label: Trigger voltage level
datatype: DOUBLE
unit: V
group: Trigger
section: Scope 1 Trigger
get_cmd: /%s/scopes/0/triglevel
low_lim: -1.0
high_lim: 1.0

; [TriggerVoltageScope1] TODO

; TODO Trigger hysteresis can be set as absolute or percentage values, idea:
; two boxes that update simultaneously. As soon as one is updated,
; 'trighysteresis/mode' will also update and then set the value accordingly.


; TODO there can be more scopes
; TODO this clicky-thingy for changing between relative and absolutive hysteresis is not practical

[HysteresisMode1]
label: Use relative hysteresis
datatype: BOOLEAN
group: Trigger
section: Scope 1 Trigger
get_cmd: /%s/scopes/0/trighysteresis/mode

; TODO there may be several scopes

[TriggerHysteresisScope1]
label: Hysteresis, absolute
datatype: DOUBLE
unit: V
group: Trigger
section: Scope 1 Trigger
get_cmd: /%s/scopes/0/trighysteresis/absolute
state_quant: HysteresisMode1
state_value_1: 0
high_lim: 2.0
low_lim: 0.0

; [TriggerHysteresisScope2] TODO

[RelativeTriggerHysteresisScope1]
label: Hysteresis, relative
datatype: DOUBLE
unit: %
group: Trigger
section: Scope 1 Trigger
get_cmd: /%s/scopes/0/trighysteresis/relative
tooltip: Hysteresis as a fraction of the adjusted full scale signal input range.
state_quant: HysteresisMode1
state_value_1: 1
high_lim: 200.0
low_lim: 0.0

; [RelativeTriggerHysteresisScope2] TODO

; TODO there may be more scopes

[TriggerHoldoffScope1]
label: Trigger holdoff time
datatype: DOUBLE
unit: s
group: Trigger
section: Scope 1 Trigger
get_cmd: /%s/scopes/0/trigholdoff
tooltip: Time before the trigger is re-armed after a recording event.
high_lim: 10.486
low_lim: 20E-6

; [TriggerHoldoffScope2]

; TODO there may be more scopes

[TriggerReferenceScope1]
label: Trigger reference
datatype: DOUBLE
unit: %
group: Trigger
section: Scope 1 Trigger
get_cmd: /%s/scopes/0/trigreference
tooltip: Reference point position in the acquired data. 50 % = 'Middle of the wave window.'
high_lim: 100.0
low_lim: 0.0

; [TriggerReferenceScope2]

; TODO there may be more scopes

[TriggerDelayScope1]
label: Trigger delay
datatype: DOUBLE
unit: s
group: Trigger
section: Scope 1 Trigger
get_cmd: /%s/scopes/0/trigdelay
high_lim: 1.193
low_lim: -4.167E-6

; [TriggerDelayScope2]


#######################################################################
### DIO Settings ######################################################
#######################################################################

[ModeDigitalIO]
label: TODO
datatype: COMBO
combo_def_1: TODO
cmd_def_1: 0
group: Digital I/O
section: DIO General
; get_cmd: /%s/scopes/0/trigslope

; [InputLevelRefTrig]
; label: Input level TODO
; datatype: DOUBLE TODO
; unit: V TODO
; group: Reference Trigger Input TODO
; section: DIO Ref/Trig Input TODO
; get_cmd: /%s/scopes/0/trigslope TODO

; TODO when an automatic threshold function is finished, the double-bar
; indicating the input level voltage should update accordingly

[Auto Threshold Input 1]
label: Adjust threshold automatically
datatype: BUTTON
group: Reference Trigger Input 1
section: DIO Ref/Trig Input
get_cmd: /%s/triggers/in/0/autothreshold

[Auto Threshold Input 2]
label: Adjust threshold automatically
datatype: BUTTON
group: Reference Trigger Input 2
section: DIO Ref/Trig Input
get_cmd: /%s/triggers/in/1/autothreshold

[Auto Threshold Input 3]
label: Adjust threshold automatically
datatype: BUTTON
group: Reference Trigger Input 3
section: DIO Ref/Trig Input
get_cmd: /%s/triggers/in/2/autothreshold

[Auto Threshold Input 4]
label: Adjust threshold automatically
datatype: BUTTON
group: Reference Trigger Input 4
section: DIO Ref/Trig Input
get_cmd: /%s/triggers/in/3/autothreshold

; TODO ManualThreshold does not return exactly what has been set, there
; should be an update feature that fetches the exact value after setting

[ManualThresholdRefTrigInput1]
label: Threshold level
datatype: DOUBLE
unit: V
group: Reference Trigger Input 1
section: DIO Ref/Trig Input
get_cmd: /%s/triggers/in/0/level

[ManualThresholdRefTrigInput2]
label: Threshold level
datatype: DOUBLE
unit: V
group: Reference Trigger Input 2
section: DIO Ref/Trig Input
get_cmd: /%s/triggers/in/1/level

[ManualThresholdRefTrigInput3]
label: Threshold level
datatype: DOUBLE
unit: V
group: Reference Trigger Input 3
section: DIO Ref/Trig Input
get_cmd: /%s/triggers/in/2/level

[ManualThresholdRefTrigInput4]
label: Threshold level
datatype: DOUBLE
unit: V
group: Reference Trigger Input 4
section: DIO Ref/Trig Input
get_cmd: /%s/triggers/in/3/level

[OutputRefTrig]
label: TODO
datatype: COMBO
combo_def_1: TODO
cmd_def_1: 0
group: Reference Trigger Output
section: DIO Ref/Trig Output
; get_cmd: /%s/scopes/0/trigslope


#######################################################################
### Factory Reset Settings ############################################
#######################################################################

[I messed up...]
label: Disable all functional units and streaming nodes
datatype: BUTTON
group: Restore default settings
section: Factory reset
